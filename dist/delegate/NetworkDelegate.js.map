{"version":3,"sources":["delegate/NetworkDelegate.js"],"names":["Object","defineProperty","exports","value","JToolUrl_1","require","NetworkDelegate","default","defaultInterceptor","requestInterceptor","config","console","log","urlFromPortion","url","params","requestInterceptorError","error","reject","responseInterceptor","response","responseInterceptorError","resolveInterceptor","data","rejectInterceptor"],"mappings":"AAAA;AACA;;;;;;;;;;;;;;AAGAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,aAAaC,QAAQ,kBAAR,CAAnB;;IACMC,e;;;;AAENJ,QAAQK,OAAR,GAAkBD,eAAlB;AACAJ,QAAQM,kBAAR,GAA6B;AACzBC,wBAAoB,4BAACC,MAAD,EAAY;AAC5B;AACAC,gBAAQC,GAAR,CAAY,UAAUR,WAAWG,OAAX,CAAmBM,cAAnB,CAAkCH,OAAOI,GAAzC,EAA8C,EAA9C,EAAkDJ,OAAOK,MAAzD,CAAtB;AACA,eAAOL,MAAP;AACH,KALwB;AAMzBM,6BAAyB,iCAACC,KAAD,EAAW;AAChC;AACA,eAAO,kBAAQC,MAAR,CAAeD,KAAf,CAAP;AACH,KATwB;AAUzBE,yBAAqB,6BAACC,QAAD,EAAc;AAC/B;AACA,eAAOA,QAAP;AACH,KAbwB;AAczBC,8BAA0B,kCAACJ,KAAD,EAAW;AACjC;AACA,eAAO,kBAAQC,MAAR,CAAeD,KAAf,CAAP;AACH,KAjBwB;AAkBzBK,wBAAoB,4BAACC,IAAD,EAAU;AAC1B,eAAO,IAAP;AACH,KApBwB;AAqBzBC,uBAAmB,2BAACP,KAAD,EAAW;AAC1B,eAAO,IAAP;AACH;AAvBwB,CAA7B","file":"NetworkDelegate.js","sourcesContent":["\"use strict\";\n/**\n * Created by cuppi on 2017/9/4.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JToolUrl_1 = require(\"../tool/JToolUrl\");\nclass NetworkDelegate {\n}\nexports.default = NetworkDelegate;\nexports.defaultInterceptor = {\n    requestInterceptor: (config) => {\n        // Do something before request is sent\n        console.log('POST ' + JToolUrl_1.default.urlFromPortion(config.url, '', config.params));\n        return config;\n    },\n    requestInterceptorError: (error) => {\n        // Do something with request error\n        return Promise.reject(error);\n    },\n    responseInterceptor: (response) => {\n        // Do something with response data\n        return response;\n    },\n    responseInterceptorError: (error) => {\n        // Do something with response error\n        return Promise.reject(error);\n    },\n    resolveInterceptor: (data) => {\n        return true;\n    },\n    rejectInterceptor: (error) => {\n        return true;\n    }\n};\n"]}