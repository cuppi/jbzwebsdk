{"version":3,"sources":["util/JManagerSeat.js"],"names":["Object","defineProperty","exports","value","JToolString_1","require","AutoSeatPicking_1","_cellSize","_cellSpace","instance","SeatManager","type","seatData","seatList","unitySeatWithSeatData","smartSeatsWithSeats","smartSeats","seatRowData","rowDataFromSmartSeats","seatContentData","seatContentDataFromSmartSeats","smartSeatsFromSeats","smartSeatDataFromSmartSeats","sections","section","sectionId","hasOwnProperty","seatMap","maxRow","maxColumn","i","j","seat","status","push","isSeat","seatNo","rowId","columnId","smartSeatsWithWPSeats","smartSeatsWithSPSeats","smartSeatsWithMZSeats","smartSeatsWithDCSeats","smartSeatsWithMYSeats","smartSeatsWithBDSeats","map","seatModel","row","key","split","shift","col","pop","rowNumber","default","numberFromString","Name","colNumber","bridgeModel","seatRowModel","Status","rowLocation","colLocation","loveIndex","LoveFlag","rowNum","columnNum","isLock","console","log","rowNo","columnNo","isLove","areaInfo","area","maxWidth","maxHeight","smartSeatModel","seatContentWidth","seatContentHeight","seatContentSize","seatContentSizeWithSmartSeats","width","height","dict","set","allRowData","forEach","sort","a","b","toString","localeCompare","count","reduce","reject","defaultManager","autoSelected","data","platform","screening","paras","cinemaId","showId","hallId"],"mappings":"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","file":"JManagerSeat.js","sourcesContent":["\"use strict\";\n/**\n * Created by cuppi on 2016/12/5.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JToolString_1 = require(\"../tool/JToolString\");\nconst AutoSeatPicking_1 = require(\"../arithmetic/AutoSeatPicking\");\nconst _cellSize = 30;\nconst _cellSpace = 8;\nlet instance = null;\n/**\n * 座位图管理类\n * @module manager\n */\nclass SeatManager {\n    /**\n     * 构造器\n     * @returns {*}\n     */\n    constructor() {\n        if (!instance) {\n            instance = this;\n        }\n        return instance;\n    }\n    /**\n     * 单例方法\n     * @returns {SeatManager}\n     */\n    static defaultManager() {\n        return new SeatManager();\n    }\n    /**\n     * 智能选座\n     * @param smartSeats\n     * @param count\n     * @returns {Promise}\n     */\n    static smartAutoSelected(smartSeats, count) {\n        return new Promise((reduce, reject) => {\n            AutoSeatPicking_1.default.defaultManager().autoSelected(smartSeats, count, (data) => {\n                reduce(data);\n            });\n        });\n    }\n    /**\n     * 获取座位图时需要的参数\n     * @param platform 平台类型\n     * @param screening 平台数据\n     * @returns {Object} 平台需要的参数\n     */\n    static seatParasFromScreening(platform, screening) {\n        var paras = {};\n        if (platform === 'wangpiao') {\n            paras = {\n                cinemaId: screening.cinemaId,\n                showId: screening.showId\n            };\n        }\n        if (platform === 'spider') {\n            paras = {\n                cinemaId: screening.cinemaId,\n                showId: screening.showId,\n                hallId: screening.hallId\n            };\n        }\n        if (platform === 'maizuo') {\n            paras = {\n                showId: screening.showId\n            };\n        }\n        if (platform === 'danche') {\n            paras = {\n                showId: screening.showId\n            };\n        }\n        if (platform === 'maoyan' || platform === 'meituan' || platform === 'dazhong') {\n            paras = {\n                showId: screening.showId\n            };\n        }\n        if (platform === 'baidu') {\n            paras = {\n                showId: screening.showId\n            };\n        }\n        return paras;\n    }\n    /**\n     * 对原始座位图进行智能转换\n     * @param type 平台类型\n     * @param seatData 座位图原始数据\n     * @returns {Array} 智能座位图列表\n     */\n    smartSeatsFromSeats(type, seatData) {\n        let seatList = this.unitySeatWithSeatData(type, seatData);\n        // 获取智能座位图\n        return this.smartSeatsWithSeats(type, seatList);\n    }\n    /**\n     * 获取智能座位图元数据\n     * @param type 平台类型\n     * @param smartSeats 智能座位图\n     * @returns {{smartSeats: Array, seatRowData: Array.<*>}} 智能座位图详细信息\n     */\n    smartSeatDataFromSmartSeats(type, smartSeats) {\n        let seatRowData = this.rowDataFromSmartSeats(smartSeats);\n        let seatContentData = this.seatContentDataFromSmartSeats(smartSeats);\n        return Object.assign({ smartSeats, seatRowData }, seatContentData);\n    }\n    /**\n     * 对原始座位图进行智能转换\n     * @param type 平台类型\n     * @param seatData 座位图原始数据\n     * @returns {{smartSeats: Array, seatRowData: Array.<*>}} 智能座位图详细信息\n     */\n    smartSeatDataFromSeats(type, seatData) {\n        // 获取智能座位图\n        let smartSeats = this.smartSeatsFromSeats(type, seatData);\n        return this.smartSeatDataFromSmartSeats(type, smartSeats);\n    }\n    /** ***********************  下面的方法为内部方法  ******************** **/\n    /**\n     * 统一座位格式\n     * @private\n     * @param type\n     * @param seatData\n     * @returns {Array}\n     */\n    unitySeatWithSeatData(type, seatData) {\n        if (type === 'maoyan' || type === 'meituan' || type === 'dazhong') {\n            let seatList = [];\n            let sections = seatData.sections;\n            for (let section of sections) {\n                for (let sectionId in section) {\n                    if (section.hasOwnProperty(sectionId)) {\n                        let seatMap = section[sectionId].seatMap;\n                        let maxRow = section[sectionId].maxRow ? section[sectionId].maxRow : 0;\n                        let maxColumn = section[sectionId].maxColumn ? section[sectionId].maxColumn : 0;\n                        for (let i = 0; i <= maxRow; i++) {\n                            for (let j = 0; j <= maxColumn; j++) {\n                                let seat = seatMap[i + ':' + j];\n                                // 去掉走廊\n                                if (seat && seat.status !== 'E') {\n                                    seat.sectionId = sectionId;\n                                    // 时间复杂度多了  但是代码整洁\n                                    seatList.push(seat);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return seatList;\n        }\n        let seatList = [];\n        let seatMap = seatData.seatMap;\n        let maxRow = seatData.maxRow;\n        let maxColumn = seatData.maxColumn;\n        // 获取基本座位图\n        if (type === 'danche') {\n            for (let i = 0; i <= maxRow; i++) {\n                for (let j = 0; j <= maxColumn; j++) {\n                    let seat = seatMap[i + ':' + j];\n                    if (seat && seat.isSeat) {\n                        // 时间复杂度多了  但是代码整洁\n                        seatList.push(seat);\n                    }\n                }\n            }\n        }\n        else if (type === 'baidu') {\n            for (let i = 0; i <= maxRow; i++) {\n                for (let j = 0; j <= maxColumn; j++) {\n                    let seat = seatMap[i + ':' + j];\n                    if (seat && seat.seatNo && seat.seatNo !== '') {\n                        seat.rowId = i;\n                        seat.columnId = j;\n                        // 时间复杂度多了  但是代码整洁\n                        seatList.push(seat);\n                    }\n                }\n            }\n        }\n        else {\n            for (let i = 0; i <= maxRow; i++) {\n                for (let j = 0; j <= maxColumn; j++) {\n                    let seat = seatMap[i + ':' + j];\n                    if (seat) {\n                        // 时间复杂度多了  但是代码整洁\n                        seatList.push(seat);\n                    }\n                }\n            }\n        }\n        return seatList;\n    }\n    /**\n     * 获取智能座位图通用方法\n     * @private\n     * @param type 平台类型\n     * @param seatList 基本座位图\n     * @returns {Array} 智能座位图\n     */\n    smartSeatsWithSeats(type, seatList) {\n        if (type === 'wangpiao') {\n            return this.smartSeatsWithWPSeats(seatList);\n        }\n        if (type === 'spider') {\n            return this.smartSeatsWithSPSeats(seatList);\n        }\n        if (type === 'maizuo') {\n            return this.smartSeatsWithMZSeats(seatList);\n        }\n        if (type === 'danche') {\n            return this.smartSeatsWithDCSeats(seatList);\n        }\n        if (type === 'maoyan' || type === 'meituan' || type === 'dazhong') {\n            return this.smartSeatsWithMYSeats(seatList);\n        }\n        if (type === 'baidu') {\n            return this.smartSeatsWithBDSeats(seatList);\n        }\n    }\n    /**\n     * 获取网票智能座位图\n     * @private\n     * @param seatList\n     * @returns {Array}\n     */\n    smartSeatsWithWPSeats(seatList) {\n        return seatList.map((seatModel) => {\n            let row = Number.parseInt(seatModel.key.split(':').shift());\n            let col = Number.parseInt(seatModel.key.split(':').pop());\n            let rowNumber = JToolString_1.default.numberFromString(seatModel.Name.split(':').shift(), true, 1);\n            let colNumber = JToolString_1.default.numberFromString(seatModel.Name.split(':').pop(), true, 1);\n            return {\n                row: row,\n                col: col,\n                rowNumber: rowNumber,\n                colNumber: colNumber,\n                seatModel: seatModel\n            };\n        }).map((bridgeModel) => {\n            let seatRowModel = bridgeModel.seatModel;\n            return Object.assign({}, bridgeModel, { \n                // N:lock  Y:unLock\n                status: seatRowModel.Status === 'Y' ? 0 : 1, rowLocation: bridgeModel.row * (_cellSize + _cellSpace), colLocation: bridgeModel.col * (_cellSize + _cellSpace), loveIndex: Number.parseInt(seatRowModel.LoveFlag) });\n        });\n    }\n    /**\n     * 获取蜘蛛智能座位图\n     * @private\n     * @param seatList\n     * @returns {Array}\n     */\n    smartSeatsWithSPSeats(seatList) {\n        return seatList.map((seatModel) => {\n            let row = Number.parseInt(seatModel.rowNum);\n            let col = Number.parseInt(seatModel.columnNum);\n            let rowNumber = JToolString_1.default.numberFromString(seatModel.rowId, true, 1);\n            let colNumber = JToolString_1.default.numberFromString(seatModel.columnId, true, 1);\n            return {\n                row: row,\n                col: col,\n                rowNumber: rowNumber,\n                colNumber: colNumber,\n                seatModel: seatModel\n            };\n        }).map(bridgeModel => {\n            let seatRowModel = bridgeModel.seatModel;\n            return Object.assign({}, bridgeModel, { status: seatRowModel.isLock\n                    ? 1\n                    : 0, rowLocation: bridgeModel.row * (_cellSize + _cellSpace), colLocation: bridgeModel.col * (_cellSize + _cellSpace), loveIndex: Number.parseInt(seatRowModel.loveIndex) });\n        });\n    }\n    /**\n     * 获取卖座智能座位图\n     * @private\n     * @param seatList\n     * @returns {Array}\n     */\n    smartSeatsWithMZSeats(seatList) {\n        return seatList.map((seatModel) => {\n            let row = Number.parseInt(seatModel.rowNum);\n            let col = Number.parseInt(seatModel.columnNum);\n            let rowNumber = JToolString_1.default.numberFromString(seatModel.rowId, true, 1);\n            let colNumber = JToolString_1.default.numberFromString(seatModel.columnId, true, 1);\n            // 上海百美汇影城\n            return {\n                row: row,\n                col: col,\n                rowNumber: rowNumber,\n                colNumber: colNumber,\n                seatModel: seatModel\n            };\n        }).map(bridgeModel => {\n            let seatRowModel = bridgeModel.seatModel;\n            return Object.assign({}, bridgeModel, { status: seatRowModel.isLock === '1'\n                    ? 1\n                    : 0, rowLocation: bridgeModel.row * (_cellSize + _cellSpace), colLocation: bridgeModel.col * (_cellSize + _cellSpace), loveIndex: Number.parseInt(seatRowModel.loveIndex) });\n        });\n    }\n    /**\n     * 获取单车智能座位图\n     * @private\n     * @param seatList\n     * @returns {Array}\n     */\n    smartSeatsWithDCSeats(seatList) {\n        return seatList.map((seatModel) => {\n            let row = Number.parseInt(seatModel.rowNum);\n            let col = Number.parseInt(seatModel.columnNum);\n            let rowNumber = JToolString_1.default.numberFromString(seatModel.rowId, true, 1);\n            let colNumber = JToolString_1.default.numberFromString(seatModel.columnId, true, 1);\n            return {\n                row: row,\n                col: col,\n                rowNumber: rowNumber,\n                colNumber: colNumber,\n                seatModel: seatModel\n            };\n        }).map(bridgeModel => {\n            let seatRowModel = bridgeModel.seatModel;\n            console.log(seatRowModel.loveIndex);\n            return Object.assign({}, bridgeModel, { status: seatRowModel.isLock\n                    ? 1\n                    : 0, rowLocation: bridgeModel.row * (_cellSize + _cellSpace), colLocation: bridgeModel.col * (_cellSize + _cellSpace), loveIndex: Number.parseInt(seatRowModel.loveIndex) });\n        });\n    }\n    /**\n     * 获取猫眼智能座位图\n     * @private\n     * @param seatList\n     * @returns {Array}\n     */\n    smartSeatsWithMYSeats(seatList) {\n        return seatList.map((seatModel) => {\n            let row = Number.parseInt(seatModel.rowNo);\n            let col = Number.parseInt(seatModel.columnNo);\n            let rowNumber = JToolString_1.default.numberFromString(seatModel.rowId, true, 1);\n            let colNumber = JToolString_1.default.numberFromString(seatModel.columnId, true, 1);\n            return {\n                row: row,\n                col: col,\n                rowNumber: rowNumber,\n                colNumber: colNumber,\n                seatModel: seatModel\n            };\n        }).map(bridgeModel => {\n            var seatRowModel = bridgeModel.seatModel;\n            let loveIndex = 0;\n            if (seatRowModel.status === 'L') {\n                loveIndex = 1;\n            }\n            else if (seatRowModel.status === 'R') {\n                loveIndex = 2;\n            }\n            return Object.assign({}, bridgeModel, { status: seatRowModel.status === 'LK'\n                    ? 1\n                    : 0, rowLocation: bridgeModel.row * (_cellSize + _cellSpace), colLocation: bridgeModel.col * (_cellSize + _cellSpace), loveIndex: loveIndex });\n        });\n    }\n    /**\n     * 获取百度智能座位图\n     * @private\n     * @param seatList\n     * @returns {Array}\n     */\n    smartSeatsWithBDSeats(seatList) {\n        return seatList.map((seatModel) => {\n            let row = Number.parseInt(seatModel.rowId);\n            let col = Number.parseInt(seatModel.columnId);\n            let rowNumber = JToolString_1.default.numberFromString(seatModel.rowNo, true, 1);\n            let colNumber = JToolString_1.default.numberFromString(seatModel.columnNo, true, 1);\n            return {\n                row: row,\n                col: col,\n                rowNumber: rowNumber,\n                colNumber: colNumber,\n                seatModel: seatModel\n            };\n        }).map((bridgeModel) => {\n            let seatRowModel = bridgeModel.seatModel;\n            return Object.assign({}, bridgeModel, { status: seatRowModel.status === '2'\n                    ? 1\n                    : 0, rowLocation: bridgeModel.row * (_cellSize + _cellSpace), colLocation: bridgeModel.col * (_cellSize + _cellSpace), loveIndex: Number.parseInt(seatRowModel.isLove), areaInfo: seatRowModel.area });\n        });\n    }\n    /**\n     * 获取座位图尺寸\n     * @private\n     * @param smartSeats 智能座位图\n     * @returns {{width: *, height: *}} 座位图尺寸\n     */\n    seatContentSizeWithSmartSeats(smartSeats) {\n        // 计算座位图大小\n        let maxWidth = 0;\n        let maxHeight = 0;\n        for (let smartSeatModel of smartSeats) {\n            if (maxWidth < smartSeatModel.colLocation) {\n                maxWidth = smartSeatModel.colLocation;\n            }\n            if (maxHeight < smartSeatModel.rowLocation) {\n                maxHeight = smartSeatModel.rowLocation;\n            }\n        }\n        let seatContentWidth = maxWidth + _cellSize;\n        let seatContentHeight = maxHeight + _cellSize;\n        return { 'width': seatContentWidth, 'height': seatContentHeight };\n    }\n    /**\n     * 获取座位图元数据\n     * @private\n     * @param smartSeats 智能座位图\n     * @returns {{seatCellWidth: number, seatCellHeight: number, seatContentWidth, seatContentHeight}}\n     */\n    seatContentDataFromSmartSeats(smartSeats) {\n        let seatContentSize = this.seatContentSizeWithSmartSeats(smartSeats);\n        return {\n            'seatCellSpace': _cellSpace,\n            'seatCellWidth': _cellSize,\n            'seatCellHeight': _cellSize,\n            'seatContentWidth': seatContentSize.width,\n            'seatContentHeight': seatContentSize.height\n        };\n    }\n    /**\n     * 获取行号数据\n     * @private\n     * @param smartSeats 智能座位图\n     * @returns {Array.<*>} 返回行号数据 {rowNumber, colLocation}\n     */\n    rowDataFromSmartSeats(smartSeats) {\n        let dict = new Map();\n        for (let seat of smartSeats) {\n            let row = seat.rowNumber;\n            if (dict.hasOwnProperty(row)) {\n                continue;\n            }\n            dict.set(row, seat.rowLocation);\n        }\n        let allRowData = [];\n        dict.forEach((value, key) => {\n            allRowData.push({ rowNumber: key, colLocation: value });\n        });\n        return allRowData.sort((a, b) => {\n            return a.rowNumber.toString().localeCompare(b.rowNumber.toString());\n        });\n    }\n}\nexports.default = SeatManager;\n"]}