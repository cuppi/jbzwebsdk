{"version":3,"sources":["util/JManagerSeat.js"],"names":["Object","defineProperty","exports","value","JToolString_1","require","AutoSeatPicking_1","_cellSize","_cellRowSpace","_cellColSpace","instance","SeatManager","type","seatData","seatList","unitySeatWithSeatData","smartSeatsWithSeats","smartSeats","seatRowData","rowDataFromSmartSeats","seatContentData","seatContentDataFromSmartSeats","smartSeatsFromSeats","smartSeatDataFromSmartSeats","sections","section","sectionId","hasOwnProperty","seatMap","maxRow","maxColumn","i","j","seat","status","push","regular","handleTaoBaoSeatData","isSeat","seatNo","rowId","columnId","seatRowList","seatColList","key","location","split","parseInt","sort","a","b","Math","abs","closeRowSpace","closeColSpace","l","min","length","rowOffset","colOffset","rowSpace","Number","MAX_VALUE","rowStress","spaceString","space","colSpace","colStress","filteredSeatMap","filteredRow","floor","filteredCol","smartSeatsWithWPSeats","smartSeatsWithSPSeats","smartSeatsWithMZSeats","smartSeatsWithDCSeats","smartSeatsWithMYSeats","smartSeatsWithBDSeats","smartSeatsWithTBSeats","minRow","minCol","forEach","row","col","adjustRow","adjustCol","rowLocation","colLocation","map","seatModel","shift","pop","rowOriNumber","default","numberRemoveLeftZero","rowName","colOriNumber","columnName","rowNumber","numberFromString","Name","colNumber","bridgeModel","seatRowModel","Status","loveIndex","LoveFlag","rowNum","columnNum","isLock","console","log","rowNo","columnNo","isLove","areaInfo","area","maxWidth","maxHeight","smartSeatModel","seatContentWidth","seatContentHeight","seatContentSize","seatContentSizeWithSmartSeats","width","height","dict","set","allRowData","toString","localeCompare","count","reduce","reject","defaultManager","autoSelected","data","platform","screening","paras","cinemaId","showId","hallId","selectedSeats","rows","indexOf","simpleSmartSeatsList","isSel","some","selSeat","filter","simpleSmartSeatsRowList","simpleSmartSeatsRow","simpleSmartSeatsRowPieceList","headIndex","MIN_VALUE","curPieceList","index","visible","isVisibleChooseWithinRow","simpleSmartSeatsRowPiece","pre","cur","simpleSmartSeats","left_space","right_space","sel_space"],"mappings":"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","file":"JManagerSeat.js","sourcesContent":["\"use strict\";\n/**\n * Created by cuppi on 2016/12/5.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JToolString_1 = require(\"../tool/JToolString\");\nconst AutoSeatPicking_1 = require(\"../arithmetic/AutoSeatPicking\");\nconst _cellSize = 30;\nconst _cellRowSpace = 8;\nconst _cellColSpace = 8;\nlet instance = null;\n/**\n * 座位图管理类\n * @module manager\n */\nclass SeatManager {\n    /**\n     * 构造器\n     * @returns {*}\n     */\n    constructor() {\n        if (!instance) {\n            instance = this;\n        }\n        return instance;\n    }\n    /**\n     * 单例方法\n     * @returns {SeatManager}\n     */\n    static defaultManager() {\n        return new SeatManager();\n    }\n    /**\n     * 智能选座\n     * @param smartSeats\n     * @param count\n     * @returns {Promise}\n     */\n    static smartAutoSelected(smartSeats, count) {\n        return new Promise((reduce, reject) => {\n            AutoSeatPicking_1.default.defaultManager().autoSelected(smartSeats, count, (data) => {\n                reduce(data);\n            });\n        });\n    }\n    /**\n     * 获取座位图时需要的参数\n     * @param platform 平台类型\n     * @param screening 平台数据\n     * @returns {Object} 平台需要的参数\n     */\n    static seatParasFromScreening(platform, screening) {\n        let paras = {};\n        if (platform === 'wangpiao') {\n            paras = {\n                cinemaId: screening.cinemaId,\n                showId: screening.showId\n            };\n        }\n        if (platform === 'spider') {\n            paras = {\n                cinemaId: screening.cinemaId,\n                showId: screening.showId,\n                hallId: screening.hallId\n            };\n        }\n        if (platform === 'maizuo') {\n            paras = {\n                showId: screening.showId\n            };\n        }\n        if (platform === 'danche') {\n            paras = {\n                showId: screening.showId\n            };\n        }\n        if (platform === 'maoyan' || platform === 'meituan' || platform === 'dazhong') {\n            paras = {\n                showId: screening.showId\n            };\n        }\n        if (platform === 'baidu') {\n            paras = {\n                showId: screening.showId\n            };\n        }\n        if (platform === 'taobao') {\n            paras = {\n                cinemaId: platform.cinemaId,\n                showId: platform.showId,\n                sectionId: platform.sectionId\n            };\n        }\n        return paras;\n    }\n    /**\n     * 对原始座位图进行智能转换\n     * @param type 平台类型\n     * @param seatData 座位图原始数据\n     * @returns {Array} 智能座位图列表\n     */\n    smartSeatsFromSeats(type, seatData) {\n        let seatList = this.unitySeatWithSeatData(type, seatData);\n        // 获取智能座位图\n        return this.smartSeatsWithSeats(type, seatList);\n    }\n    /**\n     * 获取智能座位图元数据\n     * @param type 平台类型\n     * @param smartSeats 智能座位图\n     * @returns {{smartSeats: Array, seatRowData: Array.<*>}} 智能座位图详细信息\n     */\n    smartSeatDataFromSmartSeats(type, smartSeats) {\n        let seatRowData = this.rowDataFromSmartSeats(smartSeats);\n        let seatContentData = this.seatContentDataFromSmartSeats(smartSeats);\n        return Object.assign({ smartSeats, seatRowData }, seatContentData);\n    }\n    /**\n     * 对原始座位图进行智能转换\n     * @param type 平台类型\n     * @param seatData 座位图原始数据\n     * @returns {{smartSeats: Array, seatRowData: Array.<*>}} 智能座位图详细信息\n     */\n    smartSeatDataFromSeats(type, seatData) {\n        // 获取智能座位图\n        let smartSeats = this.smartSeatsFromSeats(type, seatData);\n        return this.smartSeatDataFromSmartSeats(type, smartSeats);\n    }\n    /** ***********************  下面的方法为内部方法  ******************** **/\n    /**\n     * 统一座位格式\n     * @private\n     * @param type\n     * @param seatData\n     * @returns {Array}\n     */\n    unitySeatWithSeatData(type, seatData) {\n        if (!seatData) {\n            return [];\n        }\n        if (type === 'maoyan' || type === 'meituan' || type === 'dazhong') {\n            let seatList = [];\n            let sections = seatData.sections;\n            for (let section of sections) {\n                for (let sectionId in section) {\n                    if (section.hasOwnProperty(sectionId)) {\n                        let seatMap = section[sectionId].seatMap;\n                        let maxRow = section[sectionId].maxRow ? section[sectionId].maxRow : 0;\n                        let maxColumn = section[sectionId].maxColumn ? section[sectionId].maxColumn : 0;\n                        for (let i = 0; i <= maxRow; i++) {\n                            for (let j = 0; j <= maxColumn; j++) {\n                                let seat = seatMap[i + ':' + j];\n                                // 去掉走廊\n                                if (seat && seat.status !== 'E') {\n                                    seat.sectionId = sectionId;\n                                    // 时间复杂度多了  但是代码整洁\n                                    seatList.push(seat);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return seatList;\n        }\n        // 淘票票预处理\n        if (type === 'taobao' && !seatData.regular) {\n            seatData = this.handleTaoBaoSeatData(seatData);\n        }\n        let seatList = [];\n        let seatMap = seatData.seatMap;\n        let maxRow = seatData.maxRow;\n        let maxColumn = seatData.maxColumn;\n        // 获取基本座位图\n        if (type === 'danche') {\n            for (let i = 0; i <= maxRow; i++) {\n                for (let j = 0; j <= maxColumn; j++) {\n                    let seat = seatMap[i + ':' + j];\n                    if (seat && seat.isSeat) {\n                        // 时间复杂度多了  但是代码整洁\n                        seatList.push(seat);\n                    }\n                }\n            }\n        }\n        else if (type === 'baidu') {\n            for (let i = 0; i <= maxRow; i++) {\n                for (let j = 0; j <= maxColumn; j++) {\n                    let seat = seatMap[i + ':' + j];\n                    if (seat && seat.seatNo && seat.seatNo !== '') {\n                        seat.rowId = i;\n                        seat.columnId = j;\n                        // 时间复杂度多了  但是代码整洁\n                        seatList.push(seat);\n                    }\n                }\n            }\n        }\n        else {\n            for (let i = 0; i <= maxRow; i++) {\n                for (let j = 0; j <= maxColumn; j++) {\n                    let seat = seatMap[i + ':' + j];\n                    if (seat) {\n                        // 时间复杂度多了  但是代码整洁\n                        seatList.push(seat);\n                    }\n                }\n            }\n        }\n        return seatList;\n    }\n    /**\n     * 淘票票座位图处理\n     * @param seatData\n     * @returns {*}\n     */\n    handleTaoBaoSeatData(seatData) {\n        let seatMap = seatData.seatMap;\n        let seatRowList = [];\n        let seatColList = [];\n        for (let key in seatMap) {\n            if (seatMap.hasOwnProperty(key)) {\n                let location = key.split(':');\n                seatRowList.push(parseInt(location[0]));\n                seatColList.push(parseInt(location[1]));\n            }\n        }\n        seatRowList.sort((a, b) => {\n            return (a - b) && ((a - b) / Math.abs(a - b));\n        });\n        seatColList.sort((a, b) => {\n            return (a - b) && ((a - b) / Math.abs(a - b));\n        });\n        let closeRowSpace = {};\n        let closeColSpace = {};\n        for (let i = 1, l = Math.min(seatRowList.length, seatColList.length); i < l; i++) {\n            let rowOffset = seatRowList[i] - seatRowList[i - 1];\n            if (closeRowSpace.hasOwnProperty(rowOffset)) {\n                closeRowSpace[rowOffset]++;\n            }\n            else {\n                closeRowSpace[rowOffset] = 1;\n            }\n            let colOffset = seatColList[i] - seatColList[i - 1];\n            if (closeColSpace.hasOwnProperty(colOffset)) {\n                closeColSpace[colOffset]++;\n            }\n            else {\n                closeColSpace[colOffset] = 1;\n            }\n        }\n        let rowSpace = Number.MAX_VALUE;\n        let rowStress = 0;\n        for (let spaceString in closeRowSpace) {\n            if (closeRowSpace.hasOwnProperty(spaceString)) {\n                let space = parseInt(spaceString);\n                if (space !== 0 && closeRowSpace[space] > rowStress) {\n                    rowSpace = space;\n                    rowStress = closeRowSpace[space];\n                }\n            }\n        }\n        let colSpace = Number.MAX_VALUE;\n        let colStress = 0;\n        for (let spaceString in closeColSpace) {\n            let space = parseInt(spaceString);\n            if (space !== 0 && closeColSpace[space] > colStress) {\n                colSpace = space;\n                colStress = closeColSpace[space];\n            }\n        }\n        let filteredSeatMap = {};\n        for (let key in seatMap) {\n            if (seatMap.hasOwnProperty(key)) {\n                let location = key.split(':');\n                let filteredRow = Math.floor(parseInt(location[0]) / rowSpace);\n                let filteredCol = Math.floor(parseInt(location[1]) / colSpace);\n                let rowId = Math.floor(seatMap[key].rowId / rowSpace);\n                let columnId = Math.floor(seatMap[key].columnId / colSpace);\n                filteredSeatMap[filteredRow + ':' + filteredCol] = Object.assign({}, seatMap[key], { rowId, columnId });\n            }\n        }\n        seatData.seatMap = filteredSeatMap;\n        return seatData;\n    }\n    /**\n     * 获取智能座位图通用方法\n     * @private\n     * @param type 平台类型\n     * @param seatList 基本座位图\n     * @returns {Array} 智能座位图\n     */\n    smartSeatsWithSeats(type, seatList) {\n        let smartSeats = [];\n        if (type === 'wangpiao') {\n            smartSeats = this.smartSeatsWithWPSeats(seatList);\n        }\n        if (type === 'spider') {\n            smartSeats = this.smartSeatsWithSPSeats(seatList);\n        }\n        if (type === 'maizuo') {\n            smartSeats = this.smartSeatsWithMZSeats(seatList);\n        }\n        if (type === 'danche') {\n            smartSeats = this.smartSeatsWithDCSeats(seatList);\n        }\n        if (type === 'maoyan' || type === 'meituan' || type === 'dazhong') {\n            smartSeats = this.smartSeatsWithMYSeats(seatList);\n        }\n        if (type === 'baidu') {\n            smartSeats = this.smartSeatsWithBDSeats(seatList);\n        }\n        if (type === 'taobao') {\n            smartSeats = this.smartSeatsWithTBSeats(seatList);\n        }\n        let minRow = Number.MAX_VALUE;\n        let minCol = Number.MAX_VALUE;\n        smartSeats.forEach(seat => {\n            minRow = Math.min(minRow, seat.row);\n            minCol = Math.min(minCol, seat.col);\n        });\n        smartSeats.forEach(seat => {\n            seat.adjustRow = seat.row - minRow;\n            seat.adjustCol = seat.col - minCol;\n            seat.rowLocation -= minRow * (_cellSize + _cellRowSpace);\n            seat.colLocation -= minCol * (_cellSize + _cellColSpace);\n        });\n        return smartSeats;\n    }\n    /**\n     * 获取网票智能座位图\n     * @private\n     * @param seatList\n     * @returns {Array}\n     */\n    smartSeatsWithWPSeats(seatList) {\n        return seatList.map((seatModel) => {\n            let row = Number.parseInt(seatModel.key.split(':').shift());\n            let col = Number.parseInt(seatModel.key.split(':').pop());\n            let rowOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.rowName);\n            let colOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.columnName);\n            let rowNumber = JToolString_1.default.numberFromString(seatModel.Name.split(':').shift(), true, 1);\n            let colNumber = JToolString_1.default.numberFromString(seatModel.Name.split(':').pop(), true, 1);\n            return {\n                rowOriNumber,\n                colOriNumber,\n                row: row,\n                col: col,\n                rowNumber: rowNumber,\n                colNumber: colNumber,\n                seatModel: seatModel\n            };\n        }).map((bridgeModel) => {\n            let seatRowModel = bridgeModel.seatModel;\n            return Object.assign({}, bridgeModel, { \n                // N:lock  Y:unLock\n                status: seatRowModel.Status === 'Y' ? 0 : 1, rowLocation: bridgeModel.row * (_cellSize + _cellRowSpace), colLocation: bridgeModel.col * (_cellSize + _cellColSpace), loveIndex: Number.parseInt(seatRowModel.LoveFlag) });\n        });\n    }\n    /**\n     * 获取蜘蛛智能座位图\n     * @private\n     * @param seatList\n     * @returns {Array}\n     */\n    smartSeatsWithSPSeats(seatList) {\n        return seatList.map((seatModel) => {\n            let row = Number.parseInt(seatModel.rowNum);\n            let col = Number.parseInt(seatModel.columnNum);\n            let rowOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.rowName);\n            let colOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.columnName);\n            let rowNumber = JToolString_1.default.numberFromString(seatModel.rowId, true, 1);\n            let colNumber = JToolString_1.default.numberFromString(seatModel.columnId, true, 1);\n            return {\n                rowOriNumber,\n                colOriNumber,\n                row: row,\n                col: col,\n                rowNumber: rowNumber,\n                colNumber: colNumber,\n                seatModel: seatModel\n            };\n        }).map(bridgeModel => {\n            let seatRowModel = bridgeModel.seatModel;\n            return Object.assign({}, bridgeModel, { status: seatRowModel.isLock\n                    ? 1\n                    : 0, rowLocation: bridgeModel.row * (_cellSize + _cellRowSpace), colLocation: bridgeModel.col * (_cellSize + _cellColSpace), loveIndex: Number.parseInt(seatRowModel.loveIndex) });\n        });\n    }\n    /**\n     * 获取卖座智能座位图\n     * @private\n     * @param seatList\n     * @returns {Array}\n     */\n    smartSeatsWithMZSeats(seatList) {\n        return seatList.map((seatModel) => {\n            let row = Number.parseInt(seatModel.rowNum);\n            let col = Number.parseInt(seatModel.columnNum);\n            let rowOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.rowName);\n            let colOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.columnName);\n            let rowNumber = JToolString_1.default.numberFromString(seatModel.rowId, true, 1);\n            let colNumber = JToolString_1.default.numberFromString(seatModel.columnId, true, 1);\n            // 上海百美汇影城\n            return {\n                rowOriNumber,\n                colOriNumber,\n                row: row,\n                col: col,\n                rowNumber: rowNumber,\n                colNumber: colNumber,\n                seatModel: seatModel\n            };\n        }).map(bridgeModel => {\n            let seatRowModel = bridgeModel.seatModel;\n            return Object.assign({}, bridgeModel, { status: seatRowModel.isLock === '1'\n                    ? 1\n                    : 0, rowLocation: bridgeModel.row * (_cellSize + _cellRowSpace), colLocation: bridgeModel.col * (_cellSize + _cellColSpace), loveIndex: Number.parseInt(seatRowModel.loveIndex) });\n        });\n    }\n    /**\n     * 获取单车智能座位图\n     * @private\n     * @param seatList\n     * @returns {Array}\n     */\n    smartSeatsWithDCSeats(seatList) {\n        return seatList.map((seatModel) => {\n            let row = Number.parseInt(seatModel.rowNum);\n            let col = Number.parseInt(seatModel.columnNum);\n            let rowOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.rowName);\n            let colOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.columnName);\n            let rowNumber = JToolString_1.default.numberFromString(seatModel.rowId, true, 1);\n            let colNumber = JToolString_1.default.numberFromString(seatModel.columnId, true, 1);\n            return {\n                rowOriNumber,\n                colOriNumber,\n                row: row,\n                col: col,\n                rowNumber: rowNumber,\n                colNumber: colNumber,\n                seatModel: seatModel\n            };\n        }).map(bridgeModel => {\n            let seatRowModel = bridgeModel.seatModel;\n            console.log(seatRowModel.loveIndex);\n            return Object.assign({}, bridgeModel, { status: seatRowModel.isLock\n                    ? 1\n                    : 0, rowLocation: bridgeModel.row * (_cellSize + _cellRowSpace), colLocation: bridgeModel.col * (_cellSize + _cellColSpace), loveIndex: Number.parseInt(seatRowModel.loveIndex) });\n        });\n    }\n    /**\n     * 获取猫眼智能座位图\n     * @private\n     * @param seatList\n     * @returns {Array}\n     */\n    smartSeatsWithMYSeats(seatList) {\n        return seatList.map((seatModel) => {\n            let row = Number.parseInt(seatModel.rowNo);\n            let col = Number.parseInt(seatModel.columnNo);\n            let rowOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.rowName);\n            let colOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.columnName);\n            let rowNumber = JToolString_1.default.numberFromString(seatModel.rowId, true, 1);\n            let colNumber = JToolString_1.default.numberFromString(seatModel.columnId, true, 1);\n            return {\n                rowOriNumber,\n                colOriNumber,\n                row: row,\n                col: col,\n                rowNumber: rowNumber,\n                colNumber: colNumber,\n                seatModel: seatModel\n            };\n        }).map(bridgeModel => {\n            let seatRowModel = bridgeModel.seatModel;\n            let loveIndex = 0;\n            if (seatRowModel.status === 'L') {\n                loveIndex = 1;\n            }\n            else if (seatRowModel.status === 'R') {\n                loveIndex = 2;\n            }\n            return Object.assign({}, bridgeModel, { status: seatRowModel.status === 'LK'\n                    ? 1\n                    : 0, rowLocation: bridgeModel.row * (_cellSize + _cellRowSpace), colLocation: bridgeModel.col * (_cellSize + _cellColSpace), loveIndex: loveIndex });\n        });\n    }\n    /**\n     * 获取百度智能座位图\n     * @private\n     * @param seatList\n     * @returns {Array}\n     */\n    smartSeatsWithBDSeats(seatList) {\n        return seatList.map((seatModel) => {\n            let row = Number.parseInt(seatModel.rowId);\n            let col = Number.parseInt(seatModel.columnId);\n            let rowOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.rowName);\n            let colOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.columnName);\n            let rowNumber = JToolString_1.default.numberFromString(seatModel.rowNo, true, 1);\n            let colNumber = JToolString_1.default.numberFromString(seatModel.columnNo, true, 1);\n            return {\n                rowOriNumber,\n                colOriNumber,\n                row: row,\n                col: col,\n                rowNumber: rowNumber,\n                colNumber: colNumber,\n                seatModel: seatModel\n            };\n        }).map((bridgeModel) => {\n            let seatRowModel = bridgeModel.seatModel;\n            return Object.assign({}, bridgeModel, { status: seatRowModel.status === '2'\n                    ? 1\n                    : 0, rowLocation: bridgeModel.row * (_cellSize + _cellRowSpace), colLocation: bridgeModel.col * (_cellSize + _cellColSpace), loveIndex: Number.parseInt(seatRowModel.isLove), areaInfo: seatRowModel.area });\n        });\n    }\n    /**\n     * 获取淘票票智能座位图\n     * @param seatList\n     * @returns {Array}\n     */\n    smartSeatsWithTBSeats(seatList) {\n        return seatList.map((seatModel) => {\n            let row = Number.parseInt(seatModel.rowId);\n            let col = Number.parseInt(seatModel.columnId);\n            let rowOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.rowName);\n            let colOriNumber = JToolString_1.default.numberRemoveLeftZero(seatModel.columnName);\n            let rowNumber = JToolString_1.default.numberFromString(rowOriNumber, true, 1);\n            let colNumber = JToolString_1.default.numberFromString(colOriNumber, true, 1);\n            return {\n                rowOriNumber,\n                colOriNumber,\n                row,\n                col,\n                rowNumber,\n                colNumber,\n                seatModel\n            };\n        }).map(bridgeModel => {\n            let seatRowModel = bridgeModel.seatModel;\n            let loveIndex = 0;\n            loveIndex = seatRowModel.loveIndex;\n            return Object.assign({}, bridgeModel, { status: seatRowModel.status === 0\n                    ? 1\n                    : 0, rowLocation: bridgeModel.row * (_cellSize + _cellRowSpace), colLocation: bridgeModel.col * (_cellSize + _cellColSpace), loveIndex: loveIndex });\n        });\n    }\n    /**\n     * 获取座位图尺寸\n     * @private\n     * @param smartSeats 智能座位图\n     * @returns {{width: *, height: *}} 座位图尺寸\n     */\n    seatContentSizeWithSmartSeats(smartSeats) {\n        // 计算座位图大小\n        let maxWidth = 0;\n        let maxHeight = 0;\n        for (let smartSeatModel of smartSeats) {\n            if (maxWidth < smartSeatModel.colLocation) {\n                maxWidth = smartSeatModel.colLocation;\n            }\n            if (maxHeight < smartSeatModel.rowLocation) {\n                maxHeight = smartSeatModel.rowLocation;\n            }\n        }\n        let seatContentWidth = maxWidth + _cellSize;\n        let seatContentHeight = maxHeight + _cellSize;\n        return { 'width': seatContentWidth, 'height': seatContentHeight };\n    }\n    /**\n     * 获取座位图元数据\n     * @private\n     * @param smartSeats 智能座位图\n     * @returns {{seatCellWidth: number, seatCellHeight: number, seatContentWidth, seatContentHeight}}\n     */\n    seatContentDataFromSmartSeats(smartSeats) {\n        let seatContentSize = this.seatContentSizeWithSmartSeats(smartSeats);\n        return {\n            'seatCellRowSpace': _cellRowSpace,\n            'seatCellColSpace': _cellColSpace,\n            'seatCellWidth': _cellSize,\n            'seatCellHeight': _cellSize,\n            'seatContentWidth': seatContentSize.width,\n            'seatContentHeight': seatContentSize.height\n        };\n    }\n    /**\n     * 获取行号数据\n     * @private\n     * @param smartSeats 智能座位图\n     * @returns {Array.<*>} 返回行号数据 {rowNumber, colLocation}\n     */\n    rowDataFromSmartSeats(smartSeats) {\n        let dict = new Map();\n        for (let seat of smartSeats) {\n            let row = seat.rowNumber;\n            if (dict.hasOwnProperty(row)) {\n                continue;\n            }\n            dict.set(row, seat.rowLocation);\n        }\n        let allRowData = [];\n        dict.forEach((value, key) => {\n            allRowData.push({ rowNumber: key, colLocation: value });\n        });\n        return allRowData.sort((a, b) => {\n            return a.rowNumber.toString().localeCompare(b.rowNumber.toString());\n        });\n    }\n    static maoyanSeatCheck(selectedSeats, smartSeats) {\n        let rows = [];\n        selectedSeats.forEach(seat => {\n            if (rows.indexOf(seat.row) === -1) {\n                rows.push(seat.row);\n            }\n        });\n        let simpleSmartSeatsList = smartSeats.map(seat => {\n            let isSel = selectedSeats.some(selSeat => {\n                return selSeat.row === seat.row && selSeat.col === seat.col;\n            });\n            return { row: seat.row, col: seat.col, status: isSel ? -1 : seat.status };\n        }).filter(seat => {\n            return rows.indexOf(seat.row) !== -1;\n        });\n        let simpleSmartSeatsRowList = rows.map(row => {\n            return simpleSmartSeatsList.filter(seat => {\n                return seat.row === row;\n            });\n        });\n        for (let i = 0; i < simpleSmartSeatsRowList.length; i++) {\n            let simpleSmartSeatsRow = simpleSmartSeatsRowList[i];\n            simpleSmartSeatsRow.sort((a, b) => {\n                if (a.col > b.col) {\n                    return 1;\n                }\n                else {\n                    return -1;\n                }\n            });\n            let simpleSmartSeatsRowPieceList = [];\n            let headIndex = Number.MIN_VALUE;\n            let curPieceList = [];\n            simpleSmartSeatsRow.forEach((seat, index) => {\n                if (seat.col - index !== headIndex) {\n                    curPieceList = [seat];\n                    simpleSmartSeatsRowPieceList.push(curPieceList);\n                    headIndex = seat.col - index;\n                }\n                else {\n                    curPieceList.push(seat);\n                }\n            });\n            let visible = simpleSmartSeatsRowPieceList.map(simpleSmartSeatsRowPiece => {\n                return this.isVisibleChooseWithinRow(simpleSmartSeatsRowPiece);\n            }).reduce((pre, cur) => pre && cur, true);\n            if (!visible) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static isVisibleChooseWithinRow(simpleSmartSeats) {\n        let left_space = 0;\n        let right_space = 0;\n        let sel_space = -1;\n        for (let i = 0; i < simpleSmartSeats.length; i++) {\n            let seat = simpleSmartSeats[i];\n            if (Math.abs(seat.status) !== 1) {\n                left_space++;\n                if (sel_space !== -1) {\n                    sel_space++;\n                }\n            }\n            if (seat.status === 1) {\n                if ((right_space === 1 || left_space === 1) && (right_space * left_space)) {\n                    return false;\n                }\n                right_space = 0;\n                left_space = 0;\n                sel_space = -1;\n            }\n            if (seat.status === -1) {\n                if (left_space !== 0) {\n                    right_space = left_space;\n                    left_space = 0;\n                }\n                if (sel_space === 1) {\n                    return false;\n                }\n                sel_space = 0;\n            }\n        }\n        return !((right_space === 1 || left_space === 1) && (right_space * left_space));\n    }\n}\nexports.default = SeatManager;\n"]}