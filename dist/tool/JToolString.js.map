{"version":3,"sources":["tool/JToolString.js"],"names":["Object","defineProperty","exports","value","StringTool","isMobile","mobile","test","isPhoneNumber","phone","isEmail","email","isEmpty","string","isVerifyCode","verifycode","isPassword","password","minLength","maxLength","undefined","RegExp","numberFromASC","ascChar","asc","charCodeAt","numberFromString","force","offset","sum","i","length","radix","clearSpace","unSpaceString","replace","clearComma","unCommaString","clearVertical","unVerticalString","clearClutter","clearString","default"],"mappings":"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","file":"JToolString.js","sourcesContent":["'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * 字符串工具类\n * @memberOf module:tool\n */\nvar StringTool = (function () {\n    function StringTool() {\n    }\n    /**\n     * 校验是否为手机号码\n     * @param {string} mobile 手机号码\n     * @returns {boolean} 结果\n     */\n    StringTool.isMobile = function (mobile) {\n        return (/^1[34578]\\d{9}$/.test(mobile));\n    };\n    /**\n     * 校验是否为电话号码\n     * @param {string} phone 电话号码\n     * @returns {boolean} 结果\n     */\n    StringTool.isPhoneNumber = function (phone) {\n        return /(\\(\\d{3,4}\\)|\\d{3,4}-|\\s)?\\d{7,14}/.test(phone);\n    };\n    /**\n     * 检验是否为邮箱\n     * @param {string} email 邮箱\n     * @returns {boolean} 结果\n     */\n    StringTool.isEmail = function (email) {\n        return /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/.test(email);\n    };\n    /**\n     * 校验是否为空字符串\n     * @param {string} string 字符串\n     * @returns {boolean} 结果\n     */\n    StringTool.isEmpty = function (string) {\n        return !(string && string !== '');\n    };\n    /**\n     * 校验是否为验证码（即0~9 6位数字）\n     * @param {string} verifycode 验证码\n     * @returns {boolean} 结果\n     */\n    StringTool.isVerifyCode = function (verifycode) {\n        return (/^[0-9]{6}$/.test(verifycode));\n    };\n    /**\n     * 校验是否为密码\n     * @param {string} password 密码\n     * @param {number} minLength 最小长度\n     * @param {number} maxLength 最大长度\n     * @returns {boolean} 结果\n     */\n    StringTool.isPassword = function (password, minLength, maxLength) {\n        if (minLength !== undefined && maxLength !== undefined) {\n            return new RegExp(\"^[a-zA-Z0-9]{\" +\n                minLength + \",\" + maxLength +\n                \"}$\").test(password);\n        }\n        return (/^[a-zA-Z0-9]{6,14}$/.test(password));\n    };\n    /**\n     * 通过asc得出字符数值\n     * @param {string} ascChar asc字符\n     * @returns {number} 数值 A=0; B=1;\n     */\n    StringTool.numberFromASC = function (ascChar) {\n        var asc = ascChar.charCodeAt(0);\n        if (asc >= 65 && asc <= 90) {\n            asc -= 65;\n        }\n        else if (asc >= 97 && asc <= 122) {\n            asc -= 97;\n        }\n        else if (asc >= 48 && asc <= 57) {\n            asc -= 48;\n        }\n        else {\n            asc = 0;\n        }\n        return asc;\n    };\n    /**\n     * 转换字符串到数字\n     * @param {string} string 字符串\n     * @param {bool} force 是否强制转换非数字字符 (即为26进制数字)\n     * @param {number} offset 非数字时的初始值\n     * @returns {number} 数值\n     */\n    StringTool.numberFromString = function (string, force, offset) {\n        if (/^[0-9]*$/.test(string)) {\n            return Number.parseInt(string);\n        }\n        var sum = offset ? offset : 0;\n        if (force) {\n            for (var i = string.length - 1, radix = 1; i >= 0; i--, radix = radix * 26) {\n                sum += StringTool.numberFromASC(string[i]) * radix;\n            }\n        }\n        return sum;\n    };\n    /**\n     * 清除所有空格字符\n     * @param {string} string 字符串\n     */\n    StringTool.clearSpace = function (string) {\n        // 过滤空格\n        var unSpaceString = string.replace(/\\s+/g, '');\n        return unSpaceString;\n    };\n    /**\n     * 清除所有逗号\n     * @param {string} string 字符串\n     */\n    StringTool.clearComma = function (string) {\n        // 过滤空格\n        var unCommaString = string.replace(/\\u002c+/g, '').replace(/，+/g, '');\n        return unCommaString;\n    };\n    /**\n     * 清除所有竖线\n     * @param {string} string 字符串\n     */\n    StringTool.clearVertical = function (string) {\n        // 过滤空格\n        var unVerticalString = string.replace(/\\|+/g, '');\n        return unVerticalString;\n    };\n    /**\n     * 清除所有特殊字符\n     * @param {string} string 字符串\n     * @returns {*}\n     */\n    StringTool.clearClutter = function (string) {\n        var clearString = StringTool.clearSpace(string);\n        clearString = StringTool.clearComma(clearString);\n        clearString = StringTool.clearVertical(clearString);\n        return clearString;\n    };\n    return StringTool;\n}());\nexports.default = StringTool;\n"]}