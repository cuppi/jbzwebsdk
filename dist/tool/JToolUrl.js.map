{"version":3,"sources":["tool/JToolUrl.js"],"names":["Object","defineProperty","exports","value","url_regex_1","require","url_pattern_1","UrlTool","baseUrl","subUrl","parameters","paras","key","hasOwnProperty","undefined","push","iUrl","length","join","url","options","resolve","reject","isUrl","default","test","portionData","match","complete","console","log","host","hrefPortion","segmentValueCharset","e","Error"],"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;AAGAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,cAAcC,QAAQ,WAAR,CAApB;AACA,IAAMC,gBAAgBD,QAAQ,aAAR,CAAtB;AACA;;;;;IAIME,O;;;;;;;;AACF;;;;;;;uCAOsBC,O,EAASC,M,EAAQC,U,EAAY;AAC/C,gBAAI,CAACA,UAAL,EAAiB;AACbA,6BAAa,EAAb;AACH;AACD,gBAAIC,QAAQ,EAAZ;AACA,iBAAK,IAAIC,GAAT,IAAgBF,UAAhB,EAA4B;AACxB,oBAAI,CAACA,WAAWG,cAAX,CAA0BD,GAA1B,CAAL,EAAqC;AACjC;AACH;AACD,oBAAIF,WAAWE,GAAX,MAAoBE,SAAxB,EAAmC;AAC/BH,0BAAMI,IAAN,CAAWH,MAAM,GAAN,GAAYF,WAAWE,GAAX,CAAvB;AACH;AACJ;AACD,gBAAII,OAAOR,UAAUC,MAArB;AACA,gBAAIE,MAAMM,MAAN,GAAe,CAAnB,EAAsB;AAClBD,uBAAOA,OAAO,GAAP,GAAaL,MAAMO,IAAN,CAAW,GAAX,CAApB;AACH;AACD,mBAAOF,IAAP;AACH;AACD;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;uCAMsBG,G,EAAKC,O,EAAS;AAChC,mBAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI;AACA,wBAAIC,QAAQnB,YAAYoB,OAAZ,GAAsBC,IAAtB,CAA2BN,GAA3B,CAAZ;AACA,wBAAII,KAAJ,EAAW;AACP,4BAAIG,cAAe,IAAIpB,cAAckB,OAAlB,CAA0B,sGAA1B,EAAkI,CAAC,UAAD,EAAa,EAAb,EAAiB,MAAjB,EAAyB,EAAzB,EAA6B,MAA7B,EAAqC,MAArC,EAA6C,EAA7C,EAAiD,EAAjD,EAAqD,OAArD,EAA8D,MAA9D,EAAsE,UAAtE,EAAkF,EAAlF,EAAsF,EAAtF,EAA0F,EAA1F,EAA8F,WAA9F,CAAlI,CAAD,CAAgPG,KAAhP,CAAsPR,GAAtP,CAAlB;AACA,4BAAIC,WAAWA,QAAQQ,QAAvB,EAAiC;AAC7BC,oCAAQC,GAAR,CAAYJ,YAAYK,IAAxB;AACA,gCAAIC,cAAe,IAAI1B,cAAckB,OAAlB,KAA8B;AAC7CS,qDAAqB;AADwB,6BAA9B,CAAD,CAEdN,KAFc,CAERD,YAAYK,IAFJ,CAAlB;AAGAL,0CAAc,sBAAc,EAAd,EAAkBA,WAAlB,EAA+BM,WAA/B,CAAd;AACH;AACDX,gCAAQK,WAAR;AACH,qBAVD,MAWK;AACDL,gCAAQ,IAAR;AACH;AACJ,iBAhBD,CAiBA,OAAOa,CAAP,EAAU;AACNL,4BAAQC,GAAR,CAAYI,CAAZ;AACAZ,2BAAO,IAAIa,KAAJ,CAAU,MAAV,CAAP;AACH;AACJ,aAtBM,CAAP;AAuBH;;;;;AAELjC,QAAQsB,OAAR,GAAkBjB,OAAlB","file":"JToolUrl.js","sourcesContent":["\"use strict\";\n/**\n * Created by cuppi on 2016/12/14.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_regex_1 = require(\"url-regex\");\nconst url_pattern_1 = require(\"url-pattern\");\n/**\n * 网络地址工具类\n * @memberOf module:tool\n */\nclass UrlTool {\n    /**\n     * 合成URL完整地址\n     * @param {string} baseUrl 基础地址\n     * @param {string} subUrl 相对地址\n     * @param {string} parameters 参数\n     * @returns {string} 返回拼接后的地址\n     */\n    static urlFromPortion(baseUrl, subUrl, parameters) {\n        if (!parameters) {\n            parameters = {};\n        }\n        let paras = [];\n        for (let key in parameters) {\n            if (!parameters.hasOwnProperty(key)) {\n                continue;\n            }\n            if (parameters[key] !== undefined) {\n                paras.push(key + '=' + parameters[key]);\n            }\n        }\n        let iUrl = baseUrl + subUrl;\n        if (paras.length > 0) {\n            iUrl = iUrl + '?' + paras.join('&');\n        }\n        return iUrl;\n    }\n    /** *********  待完善接口  ************ **/\n    /**\n     *\n     * @param name\n     * @returns {*}\n     */\n    // static getUrlQuery(name) {\n    //   let reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`);\n    //   let result = window.location.search.substr(1).match(reg);\n    //   let inType = result ? decodeURIComponent(result[2]) : null;\n    //   return inType;\n    // }\n    // static getNowUrl() {\n    //   let nowUrl = window.location.href;\n    //   nowUrl = nowUrl.substring(0, nowUrl.indexOf('#/'));\n    //   return nowUrl\n    // }\n    /**\n     * 分析Url并解析为对象结构\n     * @param url 待分析Url\n     * @param options 分析Url配置\n     * @return Promise<object> 参数为解析后的结果，url无效时返回Null\n     */\n    static portionFromUrl(url, options) {\n        return new Promise((resolve, reject) => {\n            try {\n                let isUrl = url_regex_1.default().test(url);\n                if (isUrl) {\n                    let portionData = (new url_pattern_1.default(/^(http(s):\\/\\/)([\\w.-]*)(:([0-9]*))?((\\/[\\w.-]*)+)?(\\?([\\w-=&]*))?#?\\/?((([\\w-]*(\\/)?)+)?(\\?(.*))?)?/, ['protocol', '', 'host', '', 'port', 'path', '', '', 'query', 'hash', 'hashpath', '', '', '', 'hashquery'])).match(url);\n                    if (options && options.complete) {\n                        console.log(portionData.host);\n                        let hrefPortion = (new url_pattern_1.default(``, {\n                            segmentValueCharset: 'a-zA-Z0-9-_~ %/'\n                        })).match(portionData.host);\n                        portionData = Object.assign({}, portionData, hrefPortion);\n                    }\n                    resolve(portionData);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            catch (e) {\n                console.log(e);\n                reject(new Error('解析失败'));\n            }\n        });\n    }\n}\nexports.default = UrlTool;\n"]}