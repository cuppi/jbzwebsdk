{"version":3,"sources":["tool/JToolDate.js"],"names":["Object","defineProperty","exports","value","DateTool","whatType","_","Date","whatTypeDoing","dateDoning","strDoing","numDoing","otherDoing","wantDate","result","dateFromDateString","dateFromTimeInterval","wantTimeInterval","timeIntervalFromDate","timeIntervalFromDateString","date","parse","timeInterval","dateString","dateStringFromTimeInterval","format","dateStringFromDate","paddNum","num","replace","cfg","yyyy","getFullYear","yy","toString","substring","M","getMonth","MM","d","getDate","dd","hh","getHours","mm","getMinutes","ss","getSeconds","m","distanceBetweenDate","startDate","endDate","justSeconds","startTimeInterval","endTimeInterval","distance","sec","parseInt","min","hour","day","mou","currentDate","currentDateString","currentTimeInterval","now","transformDateStringByFormat","fromFormat","toFormat","weekDay","getDay","dateAfterDaysLater","beganDate","days","dateStringAfterDaysLater","setDate","y","default"],"mappings":"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","file":"JToolDate.js","sourcesContent":["\"use strict\";\n/**\n * Created by cuppi on 2016/11/25.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * 时间工具类\n * @memberOf module:tool\n */\nvar DateTool = (function () {\n    function DateTool() {\n    }\n    DateTool.whatType = function (_) {\n        if (typeof (_) === 'object') {\n            if (_ instanceof Date) {\n                return 'Date';\n            }\n        }\n        return typeof (_);\n    };\n    DateTool.whatTypeDoing = function (_, dateDoning, strDoing, numDoing, otherDoing) {\n        if (typeof (_) === 'string') {\n            strDoing();\n        }\n        if (typeof (_) === 'number') {\n            numDoing();\n        }\n        if (typeof (_) === 'object' && _ instanceof Date) {\n            dateDoning();\n        }\n        if (otherDoing) {\n            otherDoing();\n        }\n    };\n    DateTool.wantDate = function (_) {\n        var result = null;\n        DateTool.whatTypeDoing(_, function () {\n            result = _;\n        }, function () {\n            result = DateTool.dateFromDateString(_);\n        }, function () {\n            result = DateTool.dateFromTimeInterval(_);\n        });\n        return result;\n    };\n    DateTool.wantTimeInterval = function (_) {\n        var result = null;\n        DateTool.whatTypeDoing(_, function () {\n            result = DateTool.timeIntervalFromDate(_);\n        }, function () {\n            result = DateTool.timeIntervalFromDateString(_);\n        }, function () {\n            result = _;\n        });\n        return result;\n    };\n    /**\n     * 日期转换时间戳\n     * @static\n     * @param {Date} date 日期\n     * @returns {number} 时间戳\n     */\n    DateTool.timeIntervalFromDate = function (date) {\n        return Date.parse(date) / 1000;\n    };\n    /**\n     * 时间戳转换日期\n     * @param {number} timeInterval 时间戳\n     * @returns {Date} 日期\n     */\n    DateTool.dateFromTimeInterval = function (timeInterval) {\n        return new Date(timeInterval * 1000);\n    };\n    /**\n     * 日期字符串转换时间戳\n     * 注：时间格式需满足Date规范\n     * 如 2017-05-23 18:56:00、2017/05/23\n     * @param {string} dateString 日期\n     * @returns {number} 时间戳\n     */\n    DateTool.timeIntervalFromDateString = function (dateString) {\n        return DateTool.timeIntervalFromDate(new Date(dateString));\n    };\n    /**\n     * 时间戳转换日期字符串\n     * @param {number} timeInterval 时间戳\n     * @param {string} format 日期格式 如: yyyy-MM-dd hh:mm:ss\n     * @returns {string} 日期字符串\n     */\n    DateTool.dateStringFromTimeInterval = function (timeInterval, format) {\n        if (format) {\n            return DateTool.dateStringFromDate(new Date(timeInterval * 1000), format);\n        }\n        else {\n            return DateTool.dateStringFromDate(new Date(timeInterval * 1000), 'yyyy-MM-dd hh:mm:ss');\n        }\n    };\n    /**\n     * 日期转换日期字符串\n     * @param {Date} date Date对象\n     * @param {string} format 格式化信息\n     * @returns {string} 日期字符串\n     */\n    DateTool.dateStringFromDate = function (date, format) {\n        var paddNum = function (num) {\n            num += '';\n            return num.replace(/^(\\d)$/, '0$1');\n        };\n        // 指定格式字符\n        var cfg = {\n            yyyy: date.getFullYear(),\n            yy: date.getFullYear().toString().substring(2),\n            M: date.getMonth() + 1,\n            MM: paddNum(date.getMonth() + 1),\n            d: date.getDate(),\n            dd: paddNum(date.getDate()),\n            hh: date.getHours(),\n            mm: paddNum(date.getMinutes()),\n            ss: paddNum(date.getSeconds()) // 秒\n        };\n        format || (format = 'yyyy-MM-dd hh:mm:ss');\n        return format.replace(/([a-z])(\\1)*/ig, function (m) {\n            return cfg[m];\n        });\n    };\n    // TODO 待开发\n    /**\n     * 日期字符串转换日期 （待开发）\n     * @since ~1.1.*\n     * @param {string} dateString 日期字符串\n     * @param {string} format 日期格式\n     * @returns {Date} 日期\n     */\n    DateTool.dateFromDateString = function (dateString, format) {\n        return new Date(dateString);\n    };\n    // TODO 需要优化月份的算法\n    /**\n     * 获取(多态)日期的距离\n     * @param {Date | string | number} startDate 起始日期\n     * @param {Date | string | number} endDate 结束日期\n     * @param {bool} justSeconds 只需要秒的总数\n     * @returns {Array} [秒，分，小时，天，月, 年]\n     */\n    DateTool.distanceBetweenDate = function (startDate, endDate, justSeconds) {\n        var startTimeInterval = this.wantTimeInterval(startDate);\n        var endTimeInterval = this.wantTimeInterval(endDate);\n        var distance = endTimeInterval - startTimeInterval;\n        if (justSeconds) {\n            return [distance, 0, 0, 0, 0];\n        }\n        var sec = distance % 60;\n        distance = parseInt(distance / 60);\n        var min = distance % 60;\n        distance = parseInt(distance / 60);\n        var hour = distance % 24;\n        distance = parseInt(distance / 24);\n        var day = distance % 30;\n        var mou = parseInt(distance / 30);\n        return [sec, min, hour, day, mou];\n    };\n    /**\n     * 获取当前日期对象\n     * @returns {Date} 当前日期对象\n     */\n    DateTool.currentDate = function () {\n        return new Date();\n    };\n    /**\n     * 获取当前日期字符串\n     * @param {string} format 字符串格式\n     * @returns {string} 当前日期字符串\n     */\n    DateTool.currentDateString = function (format) {\n        if (format) {\n            return DateTool.dateStringFromTimeInterval(DateTool.currentTimeInterval(), format);\n        }\n        return DateTool.dateStringFromTimeInterval(DateTool.currentTimeInterval());\n    };\n    /**\n     * 获取当前时间戳\n     * @returns {number} 当前时间戳\n     */\n    DateTool.currentTimeInterval = function () {\n        return parseInt(Date.now() / 1000);\n    };\n    // TODO 待开发\n    /**\n     * 变换日期字符串格式 （待开发）\n     * @since ~1.1.*\n     * @param {string} dateString 日期字符串\n     * @param {string} fromFormat 输入格式\n     * @param {string} toFormat 输出格式\n     * @returns {string} 字符串\n     */\n    DateTool.transformDateStringByFormat = function (dateString, fromFormat, toFormat) {\n        var timeInterval = DateTool.timeIntervalFromDateString(dateString, fromFormat);\n        return DateTool.dateStringFromTimeInterval(timeInterval, toFormat);\n    };\n    /**\n     * 获取指定(多态)日期为星期几\n     * @param {Date | string | number} date 日期\n     * @returns {number} 0~6  星期一~星期日\n     */\n    DateTool.weekDay = function (date) {\n        return (DateTool.wantDate(date).getDay() + 6) % 7;\n    };\n    /**\n     * 获取(多态)日期某天后的日期()\n     * @param {Date | string | number} beganDate\n     * @param {number} days\n     * @returns {Date} 目的日期\n     */\n    DateTool.dateAfterDaysLater = function (beganDate, days) {\n        return new Date(DateTool.dateStringAfterDaysLater(beganDate, days));\n    };\n    /**\n     * 获取(多态)日期某天后的日期字符串\n     * @param {Date | string | number} beganDate 开始日期\n     * @param {number} days 天数\n     * @returns {string} 目的日期字符串\n     */\n    DateTool.dateStringAfterDaysLater = function (beganDate, days) {\n        beganDate = DateTool.wantDate(beganDate);\n        var endDate = new Date(beganDate);\n        endDate.setDate(beganDate.getDate() + days);\n        var y = endDate.getFullYear();\n        var m;\n        var d;\n        if (endDate.getMonth() > 8) {\n            m = endDate.getMonth() + 1;\n        }\n        else {\n            m = '0' + (endDate.getMonth() + 1);\n        }\n        if (endDate.getDate() > 9) {\n            d = endDate.getDate();\n        }\n        else {\n            d = '0' + endDate.getDate();\n        }\n        return y + '-' + m + '-' + d;\n    };\n    return DateTool;\n}());\nexports.default = DateTool;\n"]}