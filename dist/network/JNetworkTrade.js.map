{"version":3,"sources":["network/JNetworkTrade.js"],"names":["Object","defineProperty","exports","value","JNetwork_1","require","JUrlList_1","JDataUnify_1","JNetworkRoot_1","JNetworkTrade","type","paras","resolve","reject","prefixPromise","tradeUrl","jbzLockSeat","then","default","data","error","orderId","jbzCancelOrder","inType","jbzWebAtAppApplyTicket","wrongInType","payType","prizeIds","redIds","jbzAppPrepay","jbzWebPrepay","instance","tradeLockSeatNeedLogin","cancelLockSeatNeedLogin","tradeApplyOrderNeedLogin","tradePrePayOrderNeedLoginInType"],"mappings":"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","file":"JNetworkTrade.js","sourcesContent":["/**\n * Created by cuppi on 2016/12/7.\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JNetwork_1 = require(\"./JNetwork\");\nconst JUrlList_1 = require(\"../unify/JUrlList\");\nconst JDataUnify_1 = require(\"../unify/JDataUnify\");\nconst JNetworkRoot_1 = require(\"./JNetworkRoot\");\n/**\n * 交易接口\n * @memberOf module:network\n */\nclass JNetworkTrade extends JNetworkRoot_1.default {\n    /**\n     * 锁座\n     * @param type 平台类型\n     * @param paras 锁座参数\n     * @returns {{terminate, then}|*}\n     */\n    tradeLockSeatNeedLogin(type, paras) {\n        return new Promise((resolve, reject) => {\n            this.prefixPromise(JUrlList_1.tradeUrl.jbzLockSeat, Object.assign({ type }, paras)).then(data => {\n                resolve(JDataUnify_1.default('tradeUrl.jbzLockSeat', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**\n     * 取消锁座\n     * @param orderId 订单Id\n     * @returns {{terminate, then}|*}\n     */\n    cancelLockSeatNeedLogin(orderId) {\n        return this.prefixPromise(JUrlList_1.tradeUrl.jbzCancelOrder, { orderId });\n    }\n    /**\n     * 下订单\n     * @param type 平台类型\n     * @param paras 下订单参数\n     * @returns {{terminate, then}|*}\n     */\n    tradeApplyOrderNeedLogin(type, paras) {\n        let inType = JNetwork_1.default.inType;\n        if (inType === 'ICBC-APP' || inType === 'SHANGHAI-APP') {\n            return new Promise((resolve, reject) => {\n                this.prefixPromise(JUrlList_1.tradeUrl.jbzWebAtAppApplyTicket, Object.assign({ type }, paras)).then(data => {\n                    resolve(JDataUnify_1.default('tradeUrl.jbzWebAtAppApplyTicket', data));\n                }, error => {\n                    reject(error);\n                });\n            });\n        }\n        return JNetwork_1.default.wrongInType();\n    }\n    /**\n     * 申请预订单\n     * @param orderId 订单Id\n     * @param payType 支付类型\n     * @param prizeIds 待定\n     * @param redIds 待定\n     * @returns {{terminate, then}|*}\n     */\n    tradePrePayOrderNeedLoginInType(orderId, payType, prizeIds, redIds) {\n        let inType = JNetwork_1.default.inType;\n        if (inType === 'DPIOS' || inType === 'DPANDROID') {\n            return this.prefixPromise(JUrlList_1.tradeUrl.jbzAppPrepay, { orderId, payType, prizeIds, redIds });\n        }\n        if (inType === 'DPWX' || inType === 'DPWEB' || inType === 'PC') {\n            return this.prefixPromise(JUrlList_1.tradeUrl.jbzWebPrepay, { orderId, payType, prizeIds, redIds });\n        }\n        return JNetwork_1.default.wrongInType();\n    }\n    static tradeLockSeatNeedLogin(type, paras) {\n        return this.instance().tradeLockSeatNeedLogin(type, paras);\n    }\n    static cancelLockSeatNeedLogin(orderId) {\n        return this.instance().cancelLockSeatNeedLogin(orderId);\n    }\n    static tradeApplyOrderNeedLogin(type, paras) {\n        return this.instance().tradeApplyOrderNeedLogin(type, paras);\n    }\n    static tradePrePayOrderNeedLoginInType(orderId, payType, prizeIds, redIds) {\n        return this.instance().tradePrePayOrderNeedLoginInType(orderId, payType, prizeIds, redIds);\n    }\n}\nexports.default = JNetworkTrade;\n"]}