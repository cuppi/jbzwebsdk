{"version":3,"sources":["network/JNetwork.js"],"names":["__assign","t","s","i","n","arguments","length","p","Object","prototype","hasOwnProperty","call","defineProperty","exports","value","axios_1","require","JToolUrl_js_1","JNetwork","locationParas","delegate","cityParas","coordinateParas","cityId","id","longitude","latitude","loginParas","failedAuthorizationNetwork","resolve","reject","Error","unrealizedMethod","wrongInType","wrapCancelablePromise","promise","hasCanceled_","wrappedPromise","then","val","catch","error","terminate","checkConfigBaseUrl","baseUrl","console","log","freedomPOST","url","parameters","headers","otherObject","isOk","iHeaders","default","urlFromPortion","timeout","method","baseURL","params","response","status","data","responseJson","errorCode","notLoginError","message","indexOf","POST","inType","GET","_this","code"],"mappings":"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","file":"JNetwork.js","sourcesContent":["/**\n * Created by cuppi on 2016/11/22.\n */\n'use strict';\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar axios_1 = require(\"axios\");\nvar JToolUrl_js_1 = require(\"../tool/JToolUrl.js\");\n/** @module network*/\n/**\n * 网络请求类\n * @hideconstructor\n */\nvar JNetwork = (function () {\n    function JNetwork() {\n    }\n    /**\n     * 需要定位的请求的公共参数\n     * @private\n     * @returns {*}\n     */\n    JNetwork.locationParas = function () {\n        if (this.delegate) {\n            var cityParas = this.delegate.cityParas();\n            var coordinateParas = this.delegate.coordinateParas();\n            return {\n                cityId: cityParas.id,\n                longitude: coordinateParas.longitude,\n                latitude: coordinateParas.latitude\n            };\n        }\n        return {};\n    };\n    /**\n     * 需要登录的请求的公共参数\n     * @private\n     * @returns {*}\n     */\n    JNetwork.loginParas = function () {\n        if (this.delegate && this.delegate.loginParas) {\n            return this.delegate.loginParas();\n        }\n        return {};\n    };\n    /**\n     * 验证失败\n     * @private\n     * @returns {Promise}\n     */\n    JNetwork.failedAuthorizationNetwork = function () {\n        return new Promise(function (resolve, reject) {\n            reject(new Error('authorization error'));\n        });\n    };\n    /**\n     * 不存在的方法\n     * @private\n     * @returns {Promise}\n     */\n    JNetwork.unrealizedMethod = function () {\n        return new Promise(function (resolve, reject) {\n            reject(new Error('unrealized method'));\n        });\n    };\n    /**\n     * 错误类型\n     * @private\n     * @returns {Promise}\n     */\n    JNetwork.wrongInType = function () {\n        return new Promise(function (resolve, reject) {\n            reject(new Error('the inType is not exist, please check your inType property in JBZConfig'));\n        });\n    };\n    /**\n     * 包裹可取消的请求 （使用fetch请求时使用，目前通过axios请求，无需使用）\n     * @private\n     * @param promise 异步请求块\n     * @returns {Promise} 被包裹后的异步请求块\n     */\n    JNetwork.wrapCancelablePromise = function (promise) {\n        var hasCanceled_ = false;\n        var wrappedPromise = new Promise(function (resolve, reject) {\n            promise.then(function (val) { return hasCanceled_\n                ? function () {\n                }\n                : resolve(val); }, function () {\n                // 不写会有警告\n            });\n            promise.catch(function (error) { return hasCanceled_\n                ? function () {\n                }\n                : reject(error); });\n        });\n        return {\n            terminate: function () {\n                hasCanceled_ = true;\n            },\n            then: function (resolve, reject) {\n                return wrappedPromise.then(resolve, reject);\n            }\n        };\n    };\n    /***\n     * 检查是否配置SDK\n     * @private\n     */\n    JNetwork.checkConfigBaseUrl = function () {\n        if (!this.baseUrl || this.baseUrl === '') {\n            console.log('please check if you have config baseUrl for SDK');\n            throw Error('Not Config');\n        }\n    };\n    /**\n     * 高自由度POST方法\n     * @param {string} baseUrl 基地址\n     * @param {string} url 相对地址\n     * @param {object} parameters 地址参数\n     * @param {object} headers 头参数\n     * @param {object} otherObject 其他可用配置\n     * @returns {Promise} 异步请求块\n     */\n    JNetwork.freedomPOST = function (baseUrl, url, parameters, headers, otherObject) {\n        this.checkConfigBaseUrl();\n        var isOk;\n        return this.wrapCancelablePromise(new Promise(function (resolve, reject) {\n            var iHeaders = Object.assign({\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }, headers);\n            if (headers) {\n                // console.log(iHeaders)\n            }\n            console.log('POST ' + JToolUrl_js_1.default.urlFromPortion(baseUrl, url, parameters));\n            axios_1.default(url, {\n                timeout: otherObject.timeout,\n                method: 'post',\n                baseURL: baseUrl,\n                headers: iHeaders,\n                params: parameters\n            }).then(function (response) {\n                isOk = response.status === 200;\n                return response.data;\n            }).then(function (responseJson) {\n                if (isOk) {\n                    if (!responseJson.errorCode) {\n                        resolve(responseJson.data);\n                    }\n                    else {\n                        var errorCode = responseJson.errorCode;\n                        if (responseJson.errorCode === 10022) {\n                            reject(JNetwork.notLoginError(100022));\n                        }\n                        else {\n                            reject(new Error(responseJson.message));\n                        }\n                    }\n                }\n                else {\n                    reject(responseJson);\n                }\n            }).catch(function (error) {\n                // 请求超时\n                if (error.message.indexOf('timeout' !== -1)) {\n                    reject(new Error('请求超时, 请稍后重试'));\n                }\n                else {\n                    reject(error);\n                }\n            });\n        }));\n    };\n    /**\n     * post请求\n     * @param {string} url 相对地址\n     * @param {object} parameters 地址参数\n     * @param {object} headers 头参数(可空)\n     * @param {object} otherObject 其他参数(可空)\n     * @returns {Promise} 异步请求块\n     */\n    JNetwork.POST = function (url, parameters, headers, otherObject) {\n        return this.freedomPOST(this.baseUrl, url, __assign({}, parameters, { inType: this.inType }), headers, __assign({ timeout: this.timeout }, otherObject));\n    };\n    /**\n     * get请求\n     * @param {string} url 相对地址\n     * @param {string} parameters 地址参数\n     * @param {string} headers 头参数\n     * @returns {Promise} 异步请求块\n     */\n    JNetwork.GET = function (url, parameters, headers) {\n        var _this = this;\n        this.checkConfigBaseUrl();\n        var isOk;\n        return this.wrapCancelablePromise(new Promise(function (resolve, reject) {\n            var iHeaders = Object.assign({\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }, headers);\n            if (headers) {\n                // console.log(iHeaders)\n            }\n            console.log('GET ' + JToolUrl_js_1.default.urlFromPortion(_this.baseUrl, url, parameters));\n            axios_1.default(url, {\n                timeout: _this.timeout,\n                method: 'get',\n                baseURL: _this.baseUrl,\n                headers: iHeaders,\n                params: __assign({}, parameters, { inType: _this.inType })\n            }).then(function (response) {\n                isOk = response.status === 200;\n                return response.data;\n            }).then(function (responseJson) {\n                if (isOk) {\n                    if (!responseJson.errorCode) {\n                        resolve(responseJson.data);\n                    }\n                    else {\n                        if (responseJson.errorCode === 10022) {\n                            reject(JNetwork.notLoginError(100022));\n                        }\n                        else {\n                            reject(new Error(responseJson.message));\n                        }\n                    }\n                }\n                else {\n                    reject(responseJson);\n                }\n            }).catch(function (error) {\n                // 请求超时\n                if (error.message.indexOf('timeout' !== -1)) {\n                    reject(new Error('请求超时, 请稍后重试'));\n                }\n                else {\n                    reject(error);\n                }\n            });\n        }));\n    };\n    JNetwork.notLoginError = function (code) {\n        var error = new Error('NotLogin');\n        error.errorCode = code;\n        return error;\n    };\n    JNetwork.baseUrl = '';\n    JNetwork.timeout = 10 * 1000;\n    JNetwork.delegate = null;\n    JNetwork.inType = '';\n    return JNetwork;\n}());\nexports.default = JNetwork;\n"]}