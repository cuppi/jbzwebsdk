{"version":3,"sources":["network/JNetworkCinema.js"],"names":["__assign","t","s","i","n","arguments","length","p","Object","prototype","hasOwnProperty","call","defineProperty","exports","value","JNetwork_js_1","require","JUrlList_1","JToolDate_1","JDataUnify_1","JManagerSeat_1","JNetworkCinema","cinemaDetail","cinemaId","resolve","reject","default","POST","cinemaUrl","jbzDetail","then","data","error","cinemaDetailCanLogin","loginParas","cinemaList","location","cinemaFilter","_a","filmId","feature","region","sort","limit","jbzList","regionName","orderType","cinemaListNeedLocation","locationParas","cinemaScreeningFilmList","account","hasAccount","openId","sessionId","jbzScreeningFilmList","cinemaScreeningDateList","jbzScreeningDateList","cinemaScreeningItems","date","dateStringFromTimeInterval","jbzScreeningItems","cinemaSeats","type","paras","jbzRealtimeSeat","cinemaSmartSeats","defaultManager","smartSeatsFromSeats","cinemaFavoriteCinemaNeedLogin","cinemaName","failedAuthorizationNetwork","jbzCollectcinema","cinemaCancelFavoriteCinemaNeedLogin","jbzCancelcollectcinema"],"mappings":"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","file":"JNetworkCinema.js","sourcesContent":["/**\n * Created by cuppi on 2016/11/29.\n */\n'use strict';\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar JNetwork_js_1 = require(\"./JNetwork.js\");\nvar JUrlList_1 = require(\"../unify/JUrlList\");\nvar JToolDate_1 = require(\"../tool/JToolDate\");\nvar JDataUnify_1 = require(\"../unify/JDataUnify\");\nvar JManagerSeat_1 = require(\"../util/JManagerSeat\");\n/**\n * 影院接口\n * @memberOf module:network\n */\nvar JNetworkCinema = (function () {\n    function JNetworkCinema() {\n    }\n    /**\n     * 获取影院详情\n     * @param {string} cinemaId 影院ID\n     * @returns {Promise} promise\n     */\n    JNetworkCinema.cinemaDetail = function (cinemaId) {\n        return new Promise(function (resolve, reject) {\n            JNetwork_js_1.default.POST(JUrlList_1.cinemaUrl.jbzDetail, { cinemaId: cinemaId }).then(function (data) {\n                resolve(JDataUnify_1.default('cinemaUrl.jbzDetail', data, 0));\n            }, function (error) {\n                reject(error);\n            });\n        });\n    };\n    /**\n     * 获取影院详情(使用登录属性判断是否影院被收藏)\n     * @param {string} cinemaId 影院ID\n     * @returns {Promise} promise\n     */\n    JNetworkCinema.cinemaDetailCanLogin = function (cinemaId) {\n        var loginParas = JNetwork_js_1.default.loginParas();\n        return new Promise(function (resolve, reject) {\n            JNetwork_js_1.default.POST(JUrlList_1.cinemaUrl.jbzDetail, __assign({ cinemaId: cinemaId }, loginParas)).then(function (data) {\n                resolve(JDataUnify_1.default('cinemaUrl.jbzDetail', data, 1));\n            }, function (error) {\n                reject(error);\n            });\n        });\n    };\n    /**\n     * 影院列表\n     * @param {CoordinateModel} location\n     * @param {} cinemaFilter\n     * @returns {Promise}\n     */\n    JNetworkCinema.cinemaList = function (location, cinemaFilter) {\n        return new Promise(function (resolve, reject) {\n            var _a = cinemaFilter ? cinemaFilter : {}, filmId = _a.filmId, feature = _a.feature, region = _a.region, sort = _a.sort, limit = _a.limit;\n            JNetwork_js_1.default.POST(JUrlList_1.cinemaUrl.jbzList, __assign({}, location, { filmId: filmId,\n                feature: feature, regionName: region, orderType: sort, limit: limit })).then(function (data) {\n                resolve(JDataUnify_1.default('cinemaUrl.jbzList', data));\n            }, function (error) {\n                reject(error);\n            });\n        });\n    };\n    /**\n     * 影院列表\n     * @param cinemaFilter 影片筛选条件\n     * @returns {{terminate, then}|*}\n     */\n    JNetworkCinema.cinemaListNeedLocation = function (cinemaFilter) {\n        var location = JNetwork_js_1.default.locationParas();\n        return JNetworkCinema.cinemaList(location, cinemaFilter);\n    };\n    /**\n     * 获取指定影院排片\n     * @param cinemaId 影院Id\n     * @returns {{terminate, then}|*}\n     */\n    JNetworkCinema.cinemaScreeningFilmList = function (cinemaId) {\n        var loginParas = JNetwork_js_1.default.loginParas();\n        var account = {};\n        if (loginParas.hasAccount) {\n            account = { openId: loginParas.openId, sessionId: loginParas.sessionId };\n        }\n        return new Promise(function (resolve, reject) {\n            return JNetwork_js_1.default.POST(JUrlList_1.cinemaUrl.jbzScreeningFilmList, {\n                cinemaId: cinemaId\n            }, account).then(function (data) {\n                resolve(JDataUnify_1.default('cinemaUrl.jbzScreeningFilmList', data));\n            }, function (error) {\n                reject(error);\n            });\n        });\n    };\n    /**\n     * 获取指定影院排片日期安排\n     * @param cinemaId 影院Id\n     * @param filmId 影片Id\n     * @returns {{terminate, then}|*}\n     */\n    JNetworkCinema.cinemaScreeningDateList = function (cinemaId, filmId) {\n        return new Promise(function (resolve, reject) {\n            JNetwork_js_1.default.POST(JUrlList_1.cinemaUrl.jbzScreeningDateList, { cinemaId: cinemaId, filmId: filmId }).then(function (data) {\n                resolve(JDataUnify_1.default('cinemaUrl.jbzScreeningDateList', data));\n            }, function (error) {\n                reject(error);\n            });\n        });\n    };\n    /**\n     * 获取指定影院排片放映厅安排\n     * @param cinemaId 影院Id\n     * @param filmId 影片Id\n     * @param date 日期（时间戳标示）\n     * @returns {{terminate, then}|*}\n     */\n    JNetworkCinema.cinemaScreeningItems = function (cinemaId, filmId, date) {\n        return new Promise(function (resolve, reject) {\n            date = JToolDate_1.default.dateStringFromTimeInterval(date, 'yyyy-MM-dd');\n            JNetwork_js_1.default.POST(JUrlList_1.cinemaUrl.jbzScreeningItems, { cinemaId: cinemaId, filmId: filmId, date: date }).then(function (data) {\n                resolve(JDataUnify_1.default('cinemaUrl.jbzScreeningItems', data));\n            }, function (error) {\n                reject(error);\n            });\n        });\n    };\n    ;\n    /**\n     * 实时座位图\n     * @param type 平台类型 （必须）\n     * @param paras （根据不同平台变化）\n     * @returns {*}\n     */\n    JNetworkCinema.cinemaSeats = function (type, paras) {\n        if (type === 'meituan' || type === 'dazhong') {\n            type = 'maoyan';\n        }\n        return new Promise(function (resolve, reject) {\n            JNetwork_js_1.default.POST(JUrlList_1.cinemaUrl.jbzRealtimeSeat, __assign({ type: type }, paras)).then(function (data) {\n                resolve(JDataUnify_1.default('cinemaUrl.jbzRealtimeSeat', data));\n            }, function (error) {\n                reject(error);\n            });\n        });\n    };\n    /**\n     * 智能实时座位图\n     * @param type 平台类型 （必须）\n     * @param paras （根据不同平台变化）\n     * @returns {*}\n     */\n    JNetworkCinema.cinemaSmartSeats = function (type, paras) {\n        if (type === 'meituan' || type === 'dazhong') {\n            type = 'maoyan';\n        }\n        return new Promise(function (resolve, reject) {\n            JNetwork_js_1.default.POST(JUrlList_1.cinemaUrl.jbzRealtimeSeat, __assign({ type: type }, paras)).then(function (data) {\n                resolve(JManagerSeat_1.default.defaultManager().smartSeatsFromSeats(type, JDataUnify_1.default('cinemaUrl.jbzRealtimeSmartSeat', data)));\n            }, function (error) {\n                reject(error);\n            });\n        });\n    };\n    /**\n     * 收藏影院\n     * @param cinemaId 影院Id\n     * @param cinemaName 影院名字\n     * @returns {{terminate, then}|*}\n     */\n    JNetworkCinema.cinemaFavoriteCinemaNeedLogin = function (cinemaId, cinemaName) {\n        var loginParas = JNetwork_js_1.default.loginParas();\n        if (!loginParas.hasAccount) {\n            return JNetwork_js_1.default.failedAuthorizationNetwork();\n        }\n        return JNetwork_js_1.default.POST(JUrlList_1.cinemaUrl.jbzCollectcinema, {\n            openId: loginParas.openId,\n            cinemaId: cinemaId,\n            cinemaName: cinemaName\n        }, {\n            'sessionId': loginParas.sessionId\n        });\n    };\n    /**\n     * 取消收藏影院\n     * @param cinemaId 影院Id\n     * @returns {{terminate, then}|*}\n     */\n    JNetworkCinema.cinemaCancelFavoriteCinemaNeedLogin = function (cinemaId) {\n        var loginParas = JNetwork_js_1.default.loginParas();\n        if (!loginParas.hasAccount) {\n            return JNetwork_js_1.default.failedAuthorizationNetwork();\n        }\n        return JNetwork_js_1.default.POST(JUrlList_1.cinemaUrl.jbzCancelcollectcinema, {\n            openId: loginParas.openId,\n            cinemaId: cinemaId\n        }, {\n            'sessionId': loginParas.sessionId\n        });\n    };\n    return JNetworkCinema;\n}());\nexports.default = JNetworkCinema;\n"]}