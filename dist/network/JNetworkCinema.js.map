{"version":3,"sources":["network/JNetworkCinema.js"],"names":["Object","defineProperty","exports","value","JNetwork_1","require","JUrlList_1","JToolDate_1","JDataUnify_1","JManagerSeat_1","JNetworkRoot_1","JNetworkCinema","cinemaId","resolve","reject","default","POST","cinemaUrl","jbzDetail","useParas","otherParas","useHeaders","otherHeaders","then","data","error","location","cinemaFilter","undefined","u","filmId","feature","region","sort","limit","jbzList","regionName","orderType","jbzScreeningFilmList","jbzScreeningDateList","date","dateStringFromTimeInterval","jbzScreeningItems","type","paras","jbzRealtimeSeat","defaultManager","smartSeatsFromSeats","cinemaName","jbzCollectcinema","jbzCancelcollectcinema","instance","cinemaDetail","a","b","cinemaList","cinemaScreeningFilmList","cinemaScreeningDateList","cinemaScreeningItems","cinemaSeats","cinemaSmartSeats","cinemaFavoriteCinema","cinemaCancelFavoriteCinema"],"mappings":"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","file":"JNetworkCinema.js","sourcesContent":["/**\n * Created by cuppi on 2016/11/29.\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JNetwork_1 = require(\"./JNetwork\");\nconst JUrlList_1 = require(\"../unify/JUrlList\");\nconst JToolDate_1 = require(\"../tool/JToolDate\");\nconst JDataUnify_1 = require(\"../unify/JDataUnify\");\nconst JManagerSeat_1 = require(\"../util/JManagerSeat\");\nconst JNetworkRoot_1 = require(\"./JNetworkRoot\");\n/**\n * 影院接口\n * @memberOf module:network\n */\nclass JNetworkCinema extends JNetworkRoot_1.default {\n    /**\n     * 获取影院详情\n     * @param {string} cinemaId 影院ID\n     * @returns {Promise} promise\n     */\n    cinemaDetail(cinemaId) {\n        return new Promise((resolve, reject) => {\n            JNetwork_1.default.POST(JUrlList_1.cinemaUrl.jbzDetail, { cinemaId }).useParas(...this.otherParas).useHeaders(...this.otherHeaders).then(data => {\n                resolve(JDataUnify_1.default('cinemaUrl.jbzDetail', data, 0));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    cinemaList(location, cinemaFilter) {\n        if (cinemaFilter == undefined) {\n            cinemaFilter = location;\n        }\n        return new Promise((resolve, reject) => {\n            let u = undefined;\n            let { filmId, feature, region, sort, limit } = cinemaFilter ? cinemaFilter : { filmId: u, feature: u, region: u, sort: u, limit: u };\n            JNetwork_1.default.POST(JUrlList_1.cinemaUrl.jbzList, Object.assign({}, location, { filmId,\n                feature, regionName: region, orderType: sort, limit })).useParas(...this.otherParas).then(data => {\n                resolve(JDataUnify_1.default('cinemaUrl.jbzList', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**\n     * 获取指定影院排片\n     * @param cinemaId 影院Id\n     * @returns {{terminate, then}|*}\n     */\n    cinemaScreeningFilmList(cinemaId) {\n        return new Promise((resolve, reject) => {\n            return JNetwork_1.default.POST(JUrlList_1.cinemaUrl.jbzScreeningFilmList, {\n                cinemaId\n            }).useParas(...this.otherParas).useHeaders(...this.otherHeaders).then(data => {\n                resolve(JDataUnify_1.default('cinemaUrl.jbzScreeningFilmList', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**\n     * 获取指定影院排片日期安排\n     * @param cinemaId 影院Id\n     * @param filmId 影片Id\n     * @returns {{terminate, then}|*}\n     */\n    cinemaScreeningDateList(cinemaId, filmId) {\n        return new Promise((resolve, reject) => {\n            JNetwork_1.default.POST(JUrlList_1.cinemaUrl.jbzScreeningDateList, { cinemaId, filmId }).useParas(...this.otherParas).then(data => {\n                resolve(JDataUnify_1.default('cinemaUrl.jbzScreeningDateList', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**\n     * 获取指定影院排片放映厅安排\n     * @param cinemaId 影院Id\n     * @param filmId 影片Id\n     * @param date 日期（时间戳标示）\n     * @returns {{terminate, then}|*}\n     */\n    cinemaScreeningItems(cinemaId, filmId, date) {\n        return new Promise((resolve, reject) => {\n            date = JToolDate_1.default.dateStringFromTimeInterval(date, 'yyyy-MM-dd');\n            JNetwork_1.default.POST(JUrlList_1.cinemaUrl.jbzScreeningItems, { cinemaId, filmId, date }).useParas(...this.otherParas).then(data => {\n                resolve(JDataUnify_1.default('cinemaUrl.jbzScreeningItems', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    ;\n    /**\n     * 实时座位图\n     * @param type 平台类型 （必须）\n     * @param paras （根据不同平台变化）\n     * @returns {*}\n     */\n    cinemaSeats(type, paras) {\n        if (type === 'meituan' || type === 'dazhong') {\n            type = 'maoyan';\n        }\n        return new Promise((resolve, reject) => {\n            JNetwork_1.default.POST(JUrlList_1.cinemaUrl.jbzRealtimeSeat, Object.assign({ type }, paras)).useParas(...this.otherParas).then(data => {\n                resolve(JDataUnify_1.default('cinemaUrl.jbzRealtimeSeat', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**\n     * 智能实时座位图\n     * @param type 平台类型 （必须）\n     * @param paras （根据不同平台变化）\n     * @returns {*}\n     */\n    cinemaSmartSeats(type, paras) {\n        if (type === 'meituan' || type === 'dazhong') {\n            type = 'maoyan';\n        }\n        return new Promise((resolve, reject) => {\n            JNetwork_1.default.POST(JUrlList_1.cinemaUrl.jbzRealtimeSeat, Object.assign({ type }, paras)).useParas(...this.otherParas).then(data => {\n                resolve(JManagerSeat_1.default.defaultManager().smartSeatsFromSeats(type, JDataUnify_1.default('cinemaUrl.jbzRealtimeSmartSeat', data)));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**\n     * 收藏影院\n     * @param cinemaId 影院Id\n     * @param cinemaName 影院名字\n     * @returns {{terminate, then}|*}\n     */\n    cinemaFavoriteCinema(cinemaId, cinemaName) {\n        return JNetwork_1.default.POST(JUrlList_1.cinemaUrl.jbzCollectcinema, {\n            cinemaId: cinemaId,\n            cinemaName: cinemaName\n        }).useParas(...this.otherParas).useHeaders(...this.otherHeaders);\n    }\n    /**\n     * 取消收藏影院\n     * @param cinemaId 影院Id\n     * @returns {{terminate, then}|*}\n     */\n    cinemaCancelFavoriteCinema(cinemaId) {\n        return JNetwork_1.default.POST(JUrlList_1.cinemaUrl.jbzCancelcollectcinema, {}).useParas(...this.otherParas);\n    }\n    static cinemaDetail(cinemaId) {\n        return this.instance().cinemaDetail(cinemaId);\n    }\n    static cinemaList(a, b) {\n        return this.instance().cinemaList(a, b);\n    }\n    static cinemaScreeningFilmList(cinemaId) {\n        return this.instance().cinemaScreeningFilmList(cinemaId);\n    }\n    static cinemaScreeningDateList(cinemaId, filmId) {\n        return this.instance().cinemaScreeningDateList(cinemaId, filmId);\n    }\n    static cinemaScreeningItems(cinemaId, filmId, date) {\n        return this.instance().cinemaScreeningItems(cinemaId, filmId, date);\n    }\n    ;\n    static cinemaSeats(type, paras) {\n        return this.instance().cinemaSeats(type, paras);\n    }\n    static cinemaSmartSeats(type, paras) {\n        return this.instance().cinemaSmartSeats(type, paras);\n    }\n    static cinemaFavoriteCinema(cinemaId, cinemaName) {\n        return this.instance().cinemaFavoriteCinema(cinemaId, cinemaName);\n    }\n    static cinemaCancelFavoriteCinema(cinemaId) {\n        return this.instance().cinemaCancelFavoriteCinema(cinemaId);\n    }\n}\nexports.default = JNetworkCinema;\n"]}