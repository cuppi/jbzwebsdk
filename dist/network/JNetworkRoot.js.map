{"version":3,"sources":["network/JNetworkRoot.js"],"names":["Object","defineProperty","exports","value","JNetwork_1","require","JNetworkRoot","otherParas","otherHeaders","paras","headers","url","options","default","useParas","useHeaders","POST","then","data","instance","_instance","test","Math","random"],"mappings":"AAAA;;;;;;;;;;;;;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA;;;AAGA,IAAMC,aAAaC,QAAQ,YAAR,CAAnB;;IACMC,Y;AACF,4BAAc;AAAA;;AACV,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAKC,YAAL,GAAoB,EAApB;AACH;;;;mCAWkB;AAAA,8CAAPC,KAAO;AAAPA,qBAAO;AAAA;;AACf,iBAAKF,UAAL,GAAkBE,KAAlB;AACA,mBAAO,IAAP;AACH;;;qCACsB;AAAA,+CAATC,OAAS;AAATA,uBAAS;AAAA;;AACnB,iBAAKF,YAAL,GAAoBE,OAApB;AACA,mBAAO,IAAP;AACH;;;sCAQaC,G,EAAKF,K,EAAOC,O,EAASE,O,EAAS;AAAA;;AACxC,mBAAO,2DAAWC,OAAX,EAAmBC,QAAnB,6DAA+B,KAAKP,UAApC,IAAgDQ,UAAhD,+DAA8D,KAAKP,YAAnE,GAAiFQ,IAAjF,CAAsFL,GAAtF,EAA2FF,KAA3F,EAAkGC,OAAlG,EAA2GO,IAA3G,CAAgH,gBAAQ;AAC3H,uBAAOC,IAAP;AACH,aAFM,CAAP;AAGH;;;mCA7ByB;AACtB,gBAAIC,WAAW,IAAI,IAAJ,EAAf;;AADsB,+CAAPV,KAAO;AAAPA,qBAAO;AAAA;;AAEtBU,qBAASZ,UAAT,GAAsBE,KAAtB;AACA,mBAAOU,QAAP;AACH;;;qCAC6B;AAC1B,gBAAIA,WAAW,IAAI,IAAJ,EAAf;;AAD0B,+CAATT,OAAS;AAATA,uBAAS;AAAA;;AAE1BS,qBAASX,YAAT,GAAwBE,OAAxB;AACA,mBAAOS,QAAP;AACH;;;mCASiB;AACd,gBAAI,CAAC,KAAKC,SAAV,EAAqB;AACjB,qBAAKA,SAAL,GAAiB,IAAI,IAAJ,EAAjB;AACA,qBAAKA,SAAL,CAAeC,IAAf,GAAsBC,KAAKC,MAAL,EAAtB;AACH;AACD,mBAAO,KAAKH,SAAZ;AACH;;;;;AAOLlB,QAAQW,OAAR,GAAkBP,YAAlB","file":"JNetworkRoot.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Created by cuppi on 2017/9/6.\n */\nconst JNetwork_1 = require(\"./JNetwork\");\nclass JNetworkRoot {\n    constructor() {\n        this.otherParas = [];\n        this.otherHeaders = [];\n    }\n    static useParas(...paras) {\n        let instance = new this();\n        instance.otherParas = paras;\n        return instance;\n    }\n    static useHeaders(...headers) {\n        let instance = new this();\n        instance.otherHeaders = headers;\n        return instance;\n    }\n    useParas(...paras) {\n        this.otherParas = paras;\n        return this;\n    }\n    useHeaders(...headers) {\n        this.otherHeaders = headers;\n        return this;\n    }\n    static instance() {\n        if (!this._instance) {\n            this._instance = new this();\n            this._instance.test = Math.random();\n        }\n        return this._instance;\n    }\n    prefixPromise(url, paras, headers, options) {\n        return JNetwork_1.default.useParas(...this.otherParas).useHeaders(...this.otherHeaders).POST(url, paras, headers).then(data => {\n            return data;\n        });\n    }\n}\nexports.default = JNetworkRoot;\n"]}