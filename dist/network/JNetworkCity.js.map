{"version":3,"sources":["network/JNetworkCity.js"],"names":["Object","defineProperty","exports","value","JNetwork_1","require","JUrlList_1","JDataUnify_1","JPromise_1","JNetworkRoot_1","JNetworkCity","resolve","reject","default","POST","cityUrl","jbzCities","useParas","otherParas","then","data","error","coordinate","jbzCityByCoordinate","locationParas","cityId","create","jbzCityById","jbzDistricts","jbzHotCities","instance","cityList","cityByCoordinate","cityNeedCoordinate","cityById","cityDistrictList","cityHotList"],"mappings":"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","file":"JNetworkCity.js","sourcesContent":["/**\n * Created by cuppi on 2016/11/30.\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JNetwork_1 = require(\"./JNetwork\");\nconst JUrlList_1 = require(\"../unify/JUrlList\");\nconst JDataUnify_1 = require(\"../unify/JDataUnify\");\nconst JPromise_1 = require(\"../structure/JPromise\");\nconst JNetworkRoot_1 = require(\"./JNetworkRoot\");\n/**\n * 城市及定位接口\n * @memberOf module:network\n * @hideconstructor\n */\nclass JNetworkCity extends JNetworkRoot_1.default {\n    static cityList() {\n        return this.instance().cityList();\n    }\n    static cityByCoordinate(coordinate) {\n        return this.instance().cityByCoordinate(coordinate);\n    }\n    static cityNeedCoordinate() {\n        return this.instance().cityNeedCoordinate();\n    }\n    static cityById(cityId) {\n        return this.instance().cityById(cityId);\n    }\n    static cityDistrictList(cityId) {\n        return this.instance().cityDistrictList(cityId);\n    }\n    static cityHotList() {\n        return this.instance().cityHotList();\n    }\n    /**\n     *  获取城市列表\n     * @returns {*}\n     */\n    cityList() {\n        return new Promise((resolve, reject) => {\n            JNetwork_1.default.POST(JUrlList_1.cityUrl.jbzCities).useParas(...this.otherParas).then(data => {\n                resolve(JDataUnify_1.default('cityUrl.jbzCities', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**\n     *  通过经纬度获取城市\n     *  @param coordinate 位置信息\n     * @returns {*}\n     */\n    cityByCoordinate(coordinate) {\n        return new Promise((resolve, reject) => {\n            JNetwork_1.default.POST(JUrlList_1.cityUrl.jbzCityByCoordinate, coordinate).useParas(...this.otherParas).then(data => {\n                resolve(JDataUnify_1.default('cityUrl.jbzCityByCoordinate', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**+\n     * 通过经纬度获取城市（通过代理传递）\n     * @returns {{terminate, then}|*}\n     */\n    cityNeedCoordinate() {\n        return new Promise((resolve, reject) => {\n            JNetwork_1.default.POST(JUrlList_1.cityUrl.jbzCityByCoordinate, Object.assign({}, JNetwork_1.default.locationParas())).useParas(...this.otherParas).then(data => {\n                resolve(JDataUnify_1.default('cityUrl.jbzCityByCoordinate', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**\n     * 通过城市id获取城市\n     * @param cityId\n     * @returns {{terminate, then}|*}\n     */\n    cityById(cityId) {\n        return JPromise_1.default.create((resolve, reject) => {\n            JNetwork_1.default.POST(JUrlList_1.cityUrl.jbzCityById, { cityId }).useParas(...this.otherParas).then(data => {\n                resolve(JDataUnify_1.default('cityUrl.jbzCityById', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**+\n     * 获取地区列表\n     * @param cityId\n     * @returns {{terminate, then}|*}\n     */\n    cityDistrictList(cityId) {\n        return new Promise((resolve, reject) => {\n            JNetwork_1.default.POST(JUrlList_1.cityUrl.jbzDistricts, { cityId }).useParas(...this.otherParas).then(data => {\n                resolve(JDataUnify_1.default('cityUrl.jbzDistricts', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**\n     * 获取热门城市列表\n     * @returns {{terminate, then}|*}\n     */\n    cityHotList() {\n        return new Promise((resolve, reject) => {\n            JNetwork_1.default.POST(JUrlList_1.cityUrl.jbzHotCities).useParas(...this.otherParas).then(data => {\n                resolve(JDataUnify_1.default('cityUrl.jbzHotCities', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n}\nexports.default = JNetworkCity;\n"]}