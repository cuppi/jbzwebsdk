{"version":3,"sources":["network/JNetworkCity.js"],"names":["Object","defineProperty","exports","value","JUrlList_1","require","JDataUnify_1","JNetworkRoot_1","JNetworkCity","resolve","reject","prefixPromise","cityUrl","jbzCities","then","default","data","error","coordinate","jbzCityByCoordinate","cityId","jbzCityById","jbzDistricts","jbzHotCities","instance","cityList","cityByCoordinate","cityNeedCoordinate","cityById","cityDistrictList","cityHotList"],"mappings":"AAAA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,aAAaC,QAAQ,mBAAR,CAAnB;AACA,IAAMC,eAAeD,QAAQ,qBAAR,CAArB;AACA,IAAME,iBAAiBF,QAAQ,gBAAR,CAAvB;AACA;;;;;;IAKMG,Y;;;;;;;;;;;AACF;;;;mCAIW;AAAA;;AACP,mBAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,uBAAKC,aAAL,CAAmBP,WAAWQ,OAAX,CAAmBC,SAAtC,EAAiDC,IAAjD,CAAsD,gBAAQ;AAC1DL,4BAAQH,aAAaS,OAAb,CAAqB,mBAArB,EAA0CC,IAA1C,CAAR;AACH,iBAFD,EAEG,iBAAS;AACRN,2BAAOO,KAAP;AACH,iBAJD;AAKH,aANM,CAAP;AAOH;AACD;;;;;;;;yCAKiBC,U,EAAY;AAAA;;AACzB,mBAAO,sBAAY,UAACT,OAAD,EAAUC,MAAV,EAAqB;AACpC,uBAAKC,aAAL,CAAmBP,WAAWQ,OAAX,CAAmBO,mBAAtC,EAA2DD,UAA3D,EAAuEJ,IAAvE,CAA4E,gBAAQ;AAChFL,4BAAQH,aAAaS,OAAb,CAAqB,6BAArB,EAAoDC,IAApD,CAAR;AACH,iBAFD,EAEG,iBAAS;AACRN,2BAAOO,KAAP;AACH,iBAJD;AAKH,aANM,CAAP;AAOH;AACD;;;;;;;6CAIqB;AAAA;;AACjB,mBAAO,sBAAY,UAACR,OAAD,EAAUC,MAAV,EAAqB;AACpC,uBAAKC,aAAL,CAAmBP,WAAWQ,OAAX,CAAmBO,mBAAtC,EAA2DL,IAA3D,CAAgE,gBAAQ;AACpEL,4BAAQH,aAAaS,OAAb,CAAqB,6BAArB,EAAoDC,IAApD,CAAR;AACH,iBAFD,EAEG,iBAAS;AACRN,2BAAOO,KAAP;AACH,iBAJD;AAKH,aANM,CAAP;AAOH;AACD;;;;;;;;iCAKSG,M,EAAQ;AAAA;;AACb,mBAAO,sBAAY,UAACX,OAAD,EAAUC,MAAV,EAAqB;AACpC,uBAAKC,aAAL,CAAmBP,WAAWQ,OAAX,CAAmBS,WAAtC,EAAmD,EAAED,cAAF,EAAnD,EAA+DN,IAA/D,CAAoE,gBAAQ;AACxEL,4BAAQH,aAAaS,OAAb,CAAqB,qBAArB,EAA4CC,IAA5C,CAAR;AACH,iBAFD,EAEG,iBAAS;AACRN,2BAAOO,KAAP;AACH,iBAJD;AAKH,aANM,CAAP;AAOH;AACD;;;;;;;;yCAKiBG,M,EAAQ;AAAA;;AACrB,mBAAO,sBAAY,UAACX,OAAD,EAAUC,MAAV,EAAqB;AACpC,uBAAKC,aAAL,CAAmBP,WAAWQ,OAAX,CAAmBU,YAAtC,EAAoD,EAAEF,cAAF,EAApD,EAAgEN,IAAhE,CAAqE,gBAAQ;AACzEL,4BAAQH,aAAaS,OAAb,CAAqB,sBAArB,EAA6CC,IAA7C,CAAR;AACH,iBAFD,EAEG,iBAAS;AACRN,2BAAOO,KAAP;AACH,iBAJD;AAKH,aANM,CAAP;AAOH;AACD;;;;;;;sCAIc;AAAA;;AACV,mBAAO,sBAAY,UAACR,OAAD,EAAUC,MAAV,EAAqB;AACpC,uBAAKC,aAAL,CAAmBP,WAAWQ,OAAX,CAAmBW,YAAtC,EAAoDT,IAApD,CAAyD,gBAAQ;AAC7DL,4BAAQH,aAAaS,OAAb,CAAqB,sBAArB,EAA6CC,IAA7C,CAAR;AACH,iBAFD,EAEG,iBAAS;AACRN,2BAAOO,KAAP;AACH,iBAJD;AAKH,aANM,CAAP;AAOH;;;mCACiB;AACd,mBAAO,KAAKO,QAAL,GAAgBC,QAAhB,EAAP;AACH;;;yCACuBP,U,EAAY;AAChC,mBAAO,KAAKM,QAAL,GAAgBE,gBAAhB,CAAiCR,UAAjC,CAAP;AACH;;;6CAC2B;AACxB,mBAAO,KAAKM,QAAL,GAAgBG,kBAAhB,EAAP;AACH;;;iCACeP,M,EAAQ;AACpB,mBAAO,KAAKI,QAAL,GAAgBI,QAAhB,CAAyBR,MAAzB,CAAP;AACH;;;yCACuBA,M,EAAQ;AAC5B,mBAAO,KAAKI,QAAL,GAAgBK,gBAAhB,CAAiCT,MAAjC,CAAP;AACH;;;sCACoB;AACjB,mBAAO,KAAKI,QAAL,GAAgBM,WAAhB,EAAP;AACH;;;EAnGsBvB,eAAeQ,O;;AAqG1Cb,QAAQa,OAAR,GAAkBP,YAAlB","file":"JNetworkCity.js","sourcesContent":["/**\n * Created by cuppi on 2016/11/30.\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JUrlList_1 = require(\"../unify/JUrlList\");\nconst JDataUnify_1 = require(\"../unify/JDataUnify\");\nconst JNetworkRoot_1 = require(\"./JNetworkRoot\");\n/**\n * 城市及定位接口\n * @memberOf module:network\n * @hideconstructor\n */\nclass JNetworkCity extends JNetworkRoot_1.default {\n    /**\n     *  获取城市列表\n     * @returns {*}\n     */\n    cityList() {\n        return new Promise((resolve, reject) => {\n            this.prefixPromise(JUrlList_1.cityUrl.jbzCities).then(data => {\n                resolve(JDataUnify_1.default('cityUrl.jbzCities', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**\n     *  通过经纬度获取城市\n     *  @param coordinate 位置信息\n     * @returns {*}\n     */\n    cityByCoordinate(coordinate) {\n        return new Promise((resolve, reject) => {\n            this.prefixPromise(JUrlList_1.cityUrl.jbzCityByCoordinate, coordinate).then(data => {\n                resolve(JDataUnify_1.default('cityUrl.jbzCityByCoordinate', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**+\n     * 通过经纬度获取城市（通过代理传递）\n     * @returns {{terminate, then}|*}\n     */\n    cityNeedCoordinate() {\n        return new Promise((resolve, reject) => {\n            this.prefixPromise(JUrlList_1.cityUrl.jbzCityByCoordinate).then(data => {\n                resolve(JDataUnify_1.default('cityUrl.jbzCityByCoordinate', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**\n     * 通过城市id获取城市\n     * @param cityId\n     * @returns {{terminate, then}|*}\n     */\n    cityById(cityId) {\n        return new Promise((resolve, reject) => {\n            this.prefixPromise(JUrlList_1.cityUrl.jbzCityById, { cityId }).then(data => {\n                resolve(JDataUnify_1.default('cityUrl.jbzCityById', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**+\n     * 获取地区列表\n     * @param cityId\n     * @returns {{terminate, then}|*}\n     */\n    cityDistrictList(cityId) {\n        return new Promise((resolve, reject) => {\n            this.prefixPromise(JUrlList_1.cityUrl.jbzDistricts, { cityId }).then(data => {\n                resolve(JDataUnify_1.default('cityUrl.jbzDistricts', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**\n     * 获取热门城市列表\n     * @returns {{terminate, then}|*}\n     */\n    cityHotList() {\n        return new Promise((resolve, reject) => {\n            this.prefixPromise(JUrlList_1.cityUrl.jbzHotCities).then(data => {\n                resolve(JDataUnify_1.default('cityUrl.jbzHotCities', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    static cityList() {\n        return this.instance().cityList();\n    }\n    static cityByCoordinate(coordinate) {\n        return this.instance().cityByCoordinate(coordinate);\n    }\n    static cityNeedCoordinate() {\n        return this.instance().cityNeedCoordinate();\n    }\n    static cityById(cityId) {\n        return this.instance().cityById(cityId);\n    }\n    static cityDistrictList(cityId) {\n        return this.instance().cityDistrictList(cityId);\n    }\n    static cityHotList() {\n        return this.instance().cityHotList();\n    }\n}\nexports.default = JNetworkCity;\n"]}