{"version":3,"sources":["network/JNetworkFilm.js"],"names":["Object","defineProperty","exports","value","JNetwork_js_1","require","JUrlList_1","JDataUnify_1","JNetworkFilm","filmHotfilms","page","resolve","reject","default","POST","filmUrl","jbzHotFilms","then","data","error","jbzHotFilmsPage","index","size","filmHotfilmsSimple","jbzHotFilmsSimple","filmWaitfilms","jbzWaitFilms","jbzWaitFilmsPage","filmDetail","filmId","platform","jbzFilmDetailByPartner","platformFilmId","jbzFilmDetail","filmDateList","cityId","jbzFilmDate","filmDateListNeedCity","console","log","locationParas"],"mappings":"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","file":"JNetworkFilm.js","sourcesContent":["/**\n * Created by cuppi on 2016/11/22.\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar JNetwork_js_1 = require(\"./JNetwork.js\");\nvar JUrlList_1 = require(\"../unify/JUrlList\");\nvar JDataUnify_1 = require(\"../unify/JDataUnify\");\n/**\n * 影片接口\n * @memberOf module:network\n */\nvar JNetworkFilm = (function () {\n    function JNetworkFilm() {\n    }\n    /**\n     * 获取热门电影\n     * @param page PageModel 分页模型\n     * @returns {Promise}\n     */\n    JNetworkFilm.filmHotfilms = function (page) {\n        if (!page) {\n            return new Promise(function (resolve, reject) {\n                JNetwork_js_1.default.POST(JUrlList_1.filmUrl.jbzHotFilms).then(function (data) {\n                    resolve(JDataUnify_1.default('filmUrl.jbzHotFilms', data));\n                }, function (error) {\n                    reject(error);\n                });\n            });\n        }\n        else {\n            return new Promise(function (resolve, reject) {\n                JNetwork_js_1.default.POST(JUrlList_1.filmUrl.jbzHotFilmsPage, { page: page.index, size: page.size }).then(function (data) {\n                    resolve(JDataUnify_1.default('filmUrl.jbzHotFilmsPage', data));\n                }, function (error) {\n                    reject(error);\n                });\n            });\n        }\n    };\n    /**\n     * 获取热门电影\n     * @returns {{terminate, then}|*}\n     */\n    JNetworkFilm.filmHotfilmsSimple = function () {\n        return new Promise(function (resolve, reject) {\n            JNetwork_js_1.default.POST(JUrlList_1.filmUrl.jbzHotFilmsSimple).then(function (data) {\n                resolve(JDataUnify_1.default('filmUrl.jbzHotFilmsSimple', data));\n            }, function (error) {\n                reject(error);\n            });\n        });\n    };\n    /**\n     * 获取待映电影\n     * @param page 页号\n     * @returns {Promise}\n     */\n    JNetworkFilm.filmWaitfilms = function (page) {\n        if (!page) {\n            return new Promise(function (resolve, reject) {\n                JNetwork_js_1.default.POST(JUrlList_1.filmUrl.jbzWaitFilms).then(function (data) {\n                    resolve(JDataUnify_1.default('filmUrl.jbzWaitFilms', data));\n                }, function (error) {\n                    reject(error);\n                });\n            });\n        }\n        else {\n            return new Promise(function (resolve, reject) {\n                JNetwork_js_1.default.POST(JUrlList_1.filmUrl.jbzWaitFilmsPage, { page: page.index, size: page.size }).then(function (data) {\n                    resolve(JDataUnify_1.default('filmUrl.jbzWaitFilmsPage', data));\n                }, function (error) {\n                    reject(error);\n                });\n            });\n        }\n    };\n    /**\n     * 获取影片详情\n     * @param filmId 影片Id\n     * @param platform 平台类型(默认使用jbz平台)\n     * @returns {Promise}\n     */\n    JNetworkFilm.filmDetail = function (filmId, platform) {\n        if (platform === void 0) { platform = null; }\n        if (platform && platform !== 'jbz') {\n            return new Promise(function (resolve, reject) {\n                JNetwork_js_1.default.POST(JUrlList_1.filmUrl.jbzFilmDetailByPartner, { platformFilmId: filmId, platform: platform }).then(function (data) {\n                    resolve(JDataUnify_1.default('filmUrl.jbzFilmDetailByPartner', data));\n                }, function (error) {\n                    reject(error);\n                });\n            });\n        }\n        else {\n            return new Promise(function (resolve, reject) {\n                JNetwork_js_1.default.POST(JUrlList_1.filmUrl.jbzFilmDetail, { filmId: filmId }).then(function (data) {\n                    resolve(JDataUnify_1.default('filmUrl.jbzFilmDetail', data));\n                }, function (error) {\n                    reject(error);\n                });\n            });\n        }\n    };\n    /**\n     * 获取影片排片日期列表\n     * @param filmId 影片Id\n     * @param cityId 城市Id\n     * @returns {Promise}\n     */\n    JNetworkFilm.filmDateList = function (filmId, cityId) {\n        return new Promise(function (resolve, reject) {\n            JNetwork_js_1.default.POST(JUrlList_1.filmUrl.jbzFilmDate, { filmId: filmId, cityId: cityId }).then(function (data) {\n                resolve(JDataUnify_1.default('filmUrl.jbzFilmDate', data));\n            }, function (error) {\n                reject(error);\n            });\n        });\n    };\n    JNetworkFilm.filmDateListNeedCity = function (filmId) {\n        console.log(JNetwork_js_1.default.locationParas().cityId);\n        return JNetworkFilm.filmDateList(filmId, JNetwork_js_1.default.locationParas().cityId);\n    };\n    return JNetworkFilm;\n}());\nexports.default = JNetworkFilm;\n"]}