{"version":3,"sources":["network/JNetworkFilm.js"],"names":["Object","defineProperty","exports","value","JNetwork_1","require","JUrlList_1","JDataUnify_1","JNetworkRoot_1","JNetworkFilm","page","resolve","reject","default","POST","filmUrl","jbzHotFilms","useParas","otherParas","then","data","error","jbzHotFilmsPage","index","size","jbzHotFilmsSimple","jbzWaitFilms","jbzWaitFilmsPage","filmId","platform","jbzFilmDetailByPartner","platformFilmId","jbzFilmDetail","jbzFilmDate","instance","filmHotfilms","filmHotfilmsSimple","filmWaitfilms","filmDetail","filmDateList"],"mappings":"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","file":"JNetworkFilm.js","sourcesContent":["/**\n * Created by cuppi on 2016/11/22.\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JNetwork_1 = require(\"./JNetwork\");\nconst JUrlList_1 = require(\"../unify/JUrlList\");\nconst JDataUnify_1 = require(\"../unify/JDataUnify\");\nconst JNetworkRoot_1 = require(\"./JNetworkRoot\");\n/**\n * 影片接口\n * @memberOf module:network\n */\nclass JNetworkFilm extends JNetworkRoot_1.default {\n    /**\n     * 获取热门电影\n     * @param page PageModel 分页模型\n     * @returns {Promise}\n     */\n    filmHotfilms(page) {\n        if (!page) {\n            return new Promise((resolve, reject) => {\n                JNetwork_1.default.POST(JUrlList_1.filmUrl.jbzHotFilms).useParas(...this.otherParas).then(data => {\n                    resolve(JDataUnify_1.default('filmUrl.jbzHotFilms', data));\n                }, error => {\n                    reject(error);\n                });\n            });\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                JNetwork_1.default.POST(JUrlList_1.filmUrl.jbzHotFilmsPage, { page: page.index, size: page.size }).useParas(...this.otherParas).then(data => {\n                    resolve(JDataUnify_1.default('filmUrl.jbzHotFilmsPage', data));\n                }, error => {\n                    reject(error);\n                });\n            });\n        }\n    }\n    /**\n     * 获取热门电影\n     * @returns {{terminate, then}|*}\n     */\n    filmHotfilmsSimple() {\n        return new Promise((resolve, reject) => {\n            JNetwork_1.default.POST(JUrlList_1.filmUrl.jbzHotFilmsSimple).useParas(...this.otherParas).then(data => {\n                resolve(JDataUnify_1.default('filmUrl.jbzHotFilmsSimple', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    /**\n     * 获取待映电影\n     * @param page 页号\n     * @returns {Promise}\n     */\n    filmWaitfilms(page) {\n        if (!page) {\n            return new Promise((resolve, reject) => {\n                JNetwork_1.default.POST(JUrlList_1.filmUrl.jbzWaitFilms).useParas(...this.otherParas).then(data => {\n                    resolve(JDataUnify_1.default('filmUrl.jbzWaitFilms', data));\n                }, error => {\n                    reject(error);\n                });\n            });\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                JNetwork_1.default.POST(JUrlList_1.filmUrl.jbzWaitFilmsPage, { page: page.index, size: page.size }).useParas(...this.otherParas).then(data => {\n                    resolve(JDataUnify_1.default('filmUrl.jbzWaitFilmsPage', data));\n                }, error => {\n                    reject(error);\n                });\n            });\n        }\n    }\n    /**\n     * 获取影片详情\n     * @param filmId 影片Id\n     * @param platform 平台类型(默认使用jbz平台)\n     * @returns {Promise}\n     */\n    filmDetail(filmId, platform = null) {\n        if (platform && platform !== 'jbz') {\n            return new Promise((resolve, reject) => {\n                JNetwork_1.default.POST(JUrlList_1.filmUrl.jbzFilmDetailByPartner, { platformFilmId: filmId, platform }).useParas(...this.otherParas).then(data => {\n                    resolve(JDataUnify_1.default('filmUrl.jbzFilmDetailByPartner', data));\n                }, error => {\n                    reject(error);\n                });\n            });\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                JNetwork_1.default.POST(JUrlList_1.filmUrl.jbzFilmDetail, { filmId }).useParas(...this.otherParas).then(data => {\n                    resolve(JDataUnify_1.default('filmUrl.jbzFilmDetail', data));\n                }, error => {\n                    reject(error);\n                });\n            });\n        }\n    }\n    /**\n     * 获取影片排片日期列表\n     * @param filmId 影片Id\n     * @returns {Promise}\n     */\n    filmDateList(filmId) {\n        return new Promise((resolve, reject) => {\n            JNetwork_1.default.POST(JUrlList_1.filmUrl.jbzFilmDate, { filmId }).useParas(...this.otherParas).then(data => {\n                resolve(JDataUnify_1.default('filmUrl.jbzFilmDate', data));\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n    static filmHotfilms(page) {\n        return this.instance().filmHotfilms(page);\n    }\n    static filmHotfilmsSimple() {\n        return this.instance().filmHotfilmsSimple();\n    }\n    static filmWaitfilms(page) {\n        return this.instance().filmWaitfilms(page);\n    }\n    static filmDetail(filmId, platform = null) {\n        return this.instance().filmDetail(filmId, platform);\n    }\n    static filmDateList(filmId) {\n        return this.instance().filmDateList(filmId);\n    }\n}\nexports.default = JNetworkFilm;\n"]}