{"version":3,"sources":["network/JNetworkFunc.js"],"names":["Object","defineProperty","exports","value","Jpara","_paras","paras","para","push","isJpara","Jtask","task","parasPicker","resolve","reject","_task","_resolve","_reject","_parasPicker","_nextTask","paraItems","then","nextPara","data","do","error","console","log","name","items","emptyPara","Jlink","_tasks","tasks","_taskIndex","_headTaskPara","_allTaskPara","length","nextTask","setNextTask","_headTask","index","jlink","jpara"],"mappings":"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","file":"JNetworkFunc.js","sourcesContent":["\"use strict\";\n/**\n * Created by cuppi on 2017/5/9.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @private\n */\nclass Jpara {\n    constructor(...paras) {\n        this._paras = [];\n        for (let para of paras) {\n            this._paras.push(para);\n        }\n        this.isJpara = true;\n    }\n    items() {\n        return this._paras;\n    }\n    static emptyPara() {\n        return new Jpara();\n    }\n}\n/**\n * 辅助任务类\n * @private\n */\nclass Jtask {\n    constructor(task, parasPicker, resolve, reject) {\n        this._task = task;\n        this._resolve = resolve;\n        this._reject = reject;\n        this._parasPicker = parasPicker;\n    }\n    setNextTask(task) {\n        this._nextTask = task;\n    }\n    do(paras) {\n        paras = paras ? paras : this._parasPicker();\n        this._task(...this.paraItems(paras)).then(data => {\n            let nextPara = this._resolve(data, ...this.paraItems(paras));\n            if (this._nextTask) {\n                this._nextTask.do(nextPara);\n            }\n        }, error => {\n            if (this._reject) {\n                this._reject(error, ...this.paraItems(paras));\n            }\n            else {\n                console.log('ERROR: Don\\'t find the error handler for task (' + this._task.name + ')');\n            }\n        });\n    }\n    paraItems(nextPara) {\n        if (nextPara && nextPara.isJpara) {\n            return nextPara.items();\n        }\n        return Jpara.emptyPara().items();\n    }\n}\n/**\n *\n * 任务连接类\n * @private\n */\nclass Jlink {\n    constructor(...tasks) {\n        this._tasks = [];\n        for (var task of tasks) {\n            this._tasks.push(task);\n        }\n        this._taskIndex = 0;\n    }\n    para(para) {\n        this._headTaskPara = para;\n        return this;\n    }\n    paras(...paras) {\n        this._allTaskPara = paras;\n        return this;\n    }\n    next(resolve, reject) {\n        if (this._taskIndex >= this._tasks.length) {\n            return this;\n        }\n        let nextTask = new Jtask(this._tasks[this._taskIndex], this._parasPicker(this._taskIndex), resolve, reject);\n        this._taskIndex++;\n        if (this._nextTask) {\n            this._nextTask.setNextTask(nextTask);\n        }\n        else {\n            this._headTask = nextTask;\n        }\n        this._nextTask = nextTask;\n        return this;\n    }\n    run() {\n        this._headTask.do(this._parasPicker(0)());\n        return this;\n    }\n    /**\n     * 指定任务的paras的获取者 (目前实现会浪费内存，多个相同函数推入函数栈，后期优化）\n     * @returns {Array}\n     * @private\n     */\n    _parasPicker(index) {\n        return () => {\n            if (this._allTaskPara && this._allTaskPara.length > index) {\n                return this._allTaskPara[index];\n            }\n            if (index === 0 && this._headTaskPara) {\n                return this._headTaskPara;\n            }\n            return Jpara.emptyPara();\n        };\n    }\n}\n/**\n * 任务组合类\n * @private\n */\n// class Jcombine {\n//   _tasks: Function[];\n//   _headTaskPara: object;\n//   _taskIndex: number;\n//   _parasPicker: Function;\n//   _headTask: Jtask;\n//\n//   constructor(...tasks) {\n//     this._tasks = [];\n//     for (var task of tasks) {\n//       this._tasks.push(task);\n//     }\n//     this._taskIndex = 0;\n//   }\n//\n//   para(para) {\n//     this._headTaskPara = para;\n//     return this;\n//   }\n//\n//   paras(...paras) {\n//     this._allTaskPara = paras;\n//     return this;\n//   }\n//\n//   next(resolve, reject) {\n//     if (this._taskIndex >= this._tasks.length) {\n//       return this;\n//     }\n//     let nextTask = new Jtask(this._tasks[this._taskIndex], this._parasPicker(this._taskIndex), resolve, reject);\n//     this._taskIndex++;\n//     if (this._nextTask) {\n//       this._nextTask.setNextTask(nextTask);\n//     } else {\n//       this._headTask = nextTask;\n//     }\n//     this._nextTask = nextTask;\n//     return this;\n//   }\n//\n//   run() {\n//     this._headTask.do(this._parasPicker(0)());\n//     return this;\n//   }\n// }\n/**\n * 任务连接类\n * @alias other/jlink\n * @param tasks\n * @returns {Jlink}\n */\nfunction jlink(...tasks) {\n    return new Jlink(...tasks);\n}\nexports.jlink = jlink;\n/**\n * @private\n * @param paras\n * @returns {Jpara}\n */\nfunction jpara(...paras) {\n    return new Jpara(...paras);\n}\nexports.jpara = jpara;\n"]}